/* This file was generated by SableCC (http://www.sablecc.org/). */

package org.andromda.translation.ocl.node;

import java.util.*;
import org.andromda.translation.ocl.analysis.*;

public final class AIterateDeclarator extends PDeclarator
{
    private PVariableDeclaration _iterator_;
    private TSemicolon _semicolon_;
    private PVariableDeclaration _accumulator_;
    private PEqualExpression _equalExpression_;
    private TBar _bar_;

    public AIterateDeclarator()
    {
    }

    public AIterateDeclarator(
        PVariableDeclaration _iterator_,
        TSemicolon _semicolon_,
        PVariableDeclaration _accumulator_,
        PEqualExpression _equalExpression_,
        TBar _bar_)
    {
        setIterator(_iterator_);

        setSemicolon(_semicolon_);

        setAccumulator(_accumulator_);

        setEqualExpression(_equalExpression_);

        setBar(_bar_);

    }
    public Object clone()
    {
        return new AIterateDeclarator(
            (PVariableDeclaration) cloneNode(_iterator_),
            (TSemicolon) cloneNode(_semicolon_),
            (PVariableDeclaration) cloneNode(_accumulator_),
            (PEqualExpression) cloneNode(_equalExpression_),
            (TBar) cloneNode(_bar_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAIterateDeclarator(this);
    }

    public PVariableDeclaration getIterator()
    {
        return _iterator_;
    }

    public void setIterator(PVariableDeclaration node)
    {
        if(_iterator_ != null)
        {
            _iterator_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _iterator_ = node;
    }

    public TSemicolon getSemicolon()
    {
        return _semicolon_;
    }

    public void setSemicolon(TSemicolon node)
    {
        if(_semicolon_ != null)
        {
            _semicolon_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _semicolon_ = node;
    }

    public PVariableDeclaration getAccumulator()
    {
        return _accumulator_;
    }

    public void setAccumulator(PVariableDeclaration node)
    {
        if(_accumulator_ != null)
        {
            _accumulator_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _accumulator_ = node;
    }

    public PEqualExpression getEqualExpression()
    {
        return _equalExpression_;
    }

    public void setEqualExpression(PEqualExpression node)
    {
        if(_equalExpression_ != null)
        {
            _equalExpression_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _equalExpression_ = node;
    }

    public TBar getBar()
    {
        return _bar_;
    }

    public void setBar(TBar node)
    {
        if(_bar_ != null)
        {
            _bar_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _bar_ = node;
    }

    public String toString()
    {
        return ""
            + toString(_iterator_)
            + toString(_semicolon_)
            + toString(_accumulator_)
            + toString(_equalExpression_)
            + toString(_bar_);
    }

    void removeChild(Node child)
    {
        if(_iterator_ == child)
        {
            _iterator_ = null;
            return;
        }

        if(_semicolon_ == child)
        {
            _semicolon_ = null;
            return;
        }

        if(_accumulator_ == child)
        {
            _accumulator_ = null;
            return;
        }

        if(_equalExpression_ == child)
        {
            _equalExpression_ = null;
            return;
        }

        if(_bar_ == child)
        {
            _bar_ = null;
            return;
        }

    }

    void replaceChild(Node oldChild, Node newChild)
    {
        if(_iterator_ == oldChild)
        {
            setIterator((PVariableDeclaration) newChild);
            return;
        }

        if(_semicolon_ == oldChild)
        {
            setSemicolon((TSemicolon) newChild);
            return;
        }

        if(_accumulator_ == oldChild)
        {
            setAccumulator((PVariableDeclaration) newChild);
            return;
        }

        if(_equalExpression_ == oldChild)
        {
            setEqualExpression((PEqualExpression) newChild);
            return;
        }

        if(_bar_ == oldChild)
        {
            setBar((TBar) newChild);
            return;
        }

    }
}
