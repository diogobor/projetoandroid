/* This file was generated by SableCC (http://www.sablecc.org/). */

package org.andromda.translation.ocl.node;

import org.andromda.translation.ocl.analysis.*;

public final class X1PCommaExpression extends XPCommaExpression
{
    private XPCommaExpression _xPCommaExpression_;
    private PCommaExpression _pCommaExpression_;

    public X1PCommaExpression()
    {
    }

    public X1PCommaExpression(
        XPCommaExpression _xPCommaExpression_,
        PCommaExpression _pCommaExpression_)
    {
        setXPCommaExpression(_xPCommaExpression_);
        setPCommaExpression(_pCommaExpression_);
    }

    public Object clone()
    {
        throw new RuntimeException("Unsupported Operation");
    }

    public void apply(Switch sw)
    {
        throw new RuntimeException("Switch not supported.");
    }

    public XPCommaExpression getXPCommaExpression()
    {
        return _xPCommaExpression_;
    }

    public void setXPCommaExpression(XPCommaExpression node)
    {
        if(_xPCommaExpression_ != null)
        {
            _xPCommaExpression_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _xPCommaExpression_ = node;
    }

    public PCommaExpression getPCommaExpression()
    {
        return _pCommaExpression_;
    }

    public void setPCommaExpression(PCommaExpression node)
    {
        if(_pCommaExpression_ != null)
        {
            _pCommaExpression_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _pCommaExpression_ = node;
    }

    void removeChild(Node child)
    {
        if(_xPCommaExpression_ == child)
        {
            _xPCommaExpression_ = null;
        }

        if(_pCommaExpression_ == child)
        {
            _pCommaExpression_ = null;
        }
    }

    void replaceChild(Node oldChild, Node newChild)
    {
    }

    public String toString()
    {
        return "" +
            toString(_xPCommaExpression_) +
            toString(_pCommaExpression_);
    }
}
