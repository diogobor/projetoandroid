/* This file was generated by SableCC (http://www.sablecc.org/). */

package org.andromda.translation.ocl.analysis;

import java.util.*;
import org.andromda.translation.ocl.node.*;

public class AnalysisAdapter implements Analysis
{
    private Hashtable in;
    private Hashtable out;

    public Object getIn(Node node)
    {
        if(in == null)
        {
            return null;
        }

        return in.get(node);
    }

    public void setIn(Node node, Object in)
    {
        if(this.in == null)
        {
            this.in = new Hashtable(1);
        }

        if(in != null)
        {
            this.in.put(node, in);
        }
        else
        {
            this.in.remove(node);
        }
    }

    public Object getOut(Node node)
    {
        if(out == null)
        {
            return null;
        }

        return out.get(node);
    }

    public void setOut(Node node, Object out)
    {
        if(this.out == null)
        {
            this.out = new Hashtable(1);
        }

        if(out != null)
        {
            this.out.put(node, out);
        }
        else
        {
            this.out.remove(node);
        }
    }
    public void caseStart(Start node)
    {
        defaultCase(node);
    }

    public void caseAPackageDeclaration(APackageDeclaration node)
    {
        defaultCase(node);
    }

    public void caseAContextDeclaration(AContextDeclaration node)
    {
        defaultCase(node);
    }

    public void caseAClassifierContextDeclaration(AClassifierContextDeclaration node)
    {
        defaultCase(node);
    }

    public void caseAOperationContextDeclaration(AOperationContextDeclaration node)
    {
        defaultCase(node);
    }

    public void caseAAttributeOrAssociationContextDeclaration(AAttributeOrAssociationContextDeclaration node)
    {
        defaultCase(node);
    }

    public void caseAAttributeOrAssociationExpressionBody(AAttributeOrAssociationExpressionBody node)
    {
        defaultCase(node);
    }

    public void caseAScopeOperatorName(AScopeOperatorName node)
    {
        defaultCase(node);
    }

    public void caseAInitInitialOrDerivedValue(AInitInitialOrDerivedValue node)
    {
        defaultCase(node);
    }

    public void caseADeriveInitialOrDerivedValue(ADeriveInitialOrDerivedValue node)
    {
        defaultCase(node);
    }

    public void caseADefClassifierExpressionBody(ADefClassifierExpressionBody node)
    {
        defaultCase(node);
    }

    public void caseAInvClassifierExpressionBody(AInvClassifierExpressionBody node)
    {
        defaultCase(node);
    }

    public void caseAVariableDefinitionExpression(AVariableDefinitionExpression node)
    {
        defaultCase(node);
    }

    public void caseAOperationDefinitionExpression(AOperationDefinitionExpression node)
    {
        defaultCase(node);
    }

    public void caseAOperationExpressionBody(AOperationExpressionBody node)
    {
        defaultCase(node);
    }

    public void caseAOperation(AOperation node)
    {
        defaultCase(node);
    }

    public void caseAVariableDeclaration(AVariableDeclaration node)
    {
        defaultCase(node);
    }

    public void caseATypeDeclaration(ATypeDeclaration node)
    {
        defaultCase(node);
    }

    public void caseAVariableDeclarationList(AVariableDeclarationList node)
    {
        defaultCase(node);
    }

    public void caseAVariableDeclarationListTail(AVariableDeclarationListTail node)
    {
        defaultCase(node);
    }

    public void caseAEqualExpression(AEqualExpression node)
    {
        defaultCase(node);
    }

    public void caseABodyOperationStereotype(ABodyOperationStereotype node)
    {
        defaultCase(node);
    }

    public void caseAPreOperationStereotype(APreOperationStereotype node)
    {
        defaultCase(node);
    }

    public void caseAPostOperationStereotype(APostOperationStereotype node)
    {
        defaultCase(node);
    }

    public void caseALetExpression(ALetExpression node)
    {
        defaultCase(node);
    }

    public void caseALogicalExpression(ALogicalExpression node)
    {
        defaultCase(node);
    }

    public void caseAMessageExpression(AMessageExpression node)
    {
        defaultCase(node);
    }

    public void caseAIfExpression(AIfExpression node)
    {
        defaultCase(node);
    }

    public void caseALogicalExp(ALogicalExp node)
    {
        defaultCase(node);
    }

    public void caseALogicalExpressionTail(ALogicalExpressionTail node)
    {
        defaultCase(node);
    }

    public void caseARelationalExpression(ARelationalExpression node)
    {
        defaultCase(node);
    }

    public void caseARelationalExpressionTail(ARelationalExpressionTail node)
    {
        defaultCase(node);
    }

    public void caseAAdditiveExpression(AAdditiveExpression node)
    {
        defaultCase(node);
    }

    public void caseAAdditiveExpressionTail(AAdditiveExpressionTail node)
    {
        defaultCase(node);
    }

    public void caseAMultiplicativeExpression(AMultiplicativeExpression node)
    {
        defaultCase(node);
    }

    public void caseAMultiplicativeExpressionTail(AMultiplicativeExpressionTail node)
    {
        defaultCase(node);
    }

    public void caseAUnaryExpression(AUnaryExpression node)
    {
        defaultCase(node);
    }

    public void caseAPropertyCallExpression(APropertyCallExpression node)
    {
        defaultCase(node);
    }

    public void caseADotPropertyCallExpressionTail(ADotPropertyCallExpressionTail node)
    {
        defaultCase(node);
    }

    public void caseAArrowPropertyCallExpressionTail(AArrowPropertyCallExpressionTail node)
    {
        defaultCase(node);
    }

    public void caseALiteralPrimaryExpression(ALiteralPrimaryExpression node)
    {
        defaultCase(node);
    }

    public void caseAFeaturePrimaryExpression(AFeaturePrimaryExpression node)
    {
        defaultCase(node);
    }

    public void caseAParenthesesPrimaryExpression(AParenthesesPrimaryExpression node)
    {
        defaultCase(node);
    }

    public void caseAIfPrimaryExpression(AIfPrimaryExpression node)
    {
        defaultCase(node);
    }

    public void caseAConcreteFeatureCallParameters(AConcreteFeatureCallParameters node)
    {
        defaultCase(node);
    }

    public void caseAFeatureCallParameters(AFeatureCallParameters node)
    {
        defaultCase(node);
    }

    public void caseAStandardDeclarator(AStandardDeclarator node)
    {
        defaultCase(node);
    }

    public void caseAIterateDeclarator(AIterateDeclarator node)
    {
        defaultCase(node);
    }

    public void caseADeclaratorTail(ADeclaratorTail node)
    {
        defaultCase(node);
    }

    public void caseACommaExpression(ACommaExpression node)
    {
        defaultCase(node);
    }

    public void caseACommaFeatureCallParameterOption(ACommaFeatureCallParameterOption node)
    {
        defaultCase(node);
    }

    public void caseAColonFeatureCallParameterOption(AColonFeatureCallParameterOption node)
    {
        defaultCase(node);
    }

    public void caseAIterateFeatureCallParameterOption(AIterateFeatureCallParameterOption node)
    {
        defaultCase(node);
    }

    public void caseABarFeatureCallParameterOption(ABarFeatureCallParameterOption node)
    {
        defaultCase(node);
    }

    public void caseALetExp(ALetExp node)
    {
        defaultCase(node);
    }

    public void caseAVariableDeclarationLetExpSub(AVariableDeclarationLetExpSub node)
    {
        defaultCase(node);
    }

    public void caseAInLetExpSub(AInLetExpSub node)
    {
        defaultCase(node);
    }

    public void caseALetVariableDeclaration(ALetVariableDeclaration node)
    {
        defaultCase(node);
    }

    public void caseACollectionLiteral(ACollectionLiteral node)
    {
        defaultCase(node);
    }

    public void caseAPrimitiveLiteral(APrimitiveLiteral node)
    {
        defaultCase(node);
    }

    public void caseATupleLiteral(ATupleLiteral node)
    {
        defaultCase(node);
    }

    public void caseAStringPrimitiveLit(AStringPrimitiveLit node)
    {
        defaultCase(node);
    }

    public void caseARealPrimitiveLit(ARealPrimitiveLit node)
    {
        defaultCase(node);
    }

    public void caseAIntegerPrimitiveLit(AIntegerPrimitiveLit node)
    {
        defaultCase(node);
    }

    public void caseABooleanPrimitiveLit(ABooleanPrimitiveLit node)
    {
        defaultCase(node);
    }

    public void caseATupleLit(ATupleLit node)
    {
        defaultCase(node);
    }

    public void caseACollectionLit(ACollectionLit node)
    {
        defaultCase(node);
    }

    public void caseAExpressionListOrRange(AExpressionListOrRange node)
    {
        defaultCase(node);
    }

    public void caseAListExpressionListOrRangeTail(AListExpressionListOrRangeTail node)
    {
        defaultCase(node);
    }

    public void caseARangeExpressionListOrRangeTail(ARangeExpressionListOrRangeTail node)
    {
        defaultCase(node);
    }

    public void caseAFeatureCall(AFeatureCall node)
    {
        defaultCase(node);
    }

    public void caseAQualifiers(AQualifiers node)
    {
        defaultCase(node);
    }

    public void caseASimpleType(ASimpleType node)
    {
        defaultCase(node);
    }

    public void caseACollectionType(ACollectionType node)
    {
        defaultCase(node);
    }

    public void caseATupletypeType(ATupletypeType node)
    {
        defaultCase(node);
    }

    public void caseASetCollectionType(ASetCollectionType node)
    {
        defaultCase(node);
    }

    public void caseABagCollectionType(ABagCollectionType node)
    {
        defaultCase(node);
    }

    public void caseASequenceCollectionType(ASequenceCollectionType node)
    {
        defaultCase(node);
    }

    public void caseAOrderedsetCollectionType(AOrderedsetCollectionType node)
    {
        defaultCase(node);
    }

    public void caseACollectionCollectionType(ACollectionCollectionType node)
    {
        defaultCase(node);
    }

    public void caseATupleType(ATupleType node)
    {
        defaultCase(node);
    }

    public void caseAMessageMessageExp(AMessageMessageExp node)
    {
        defaultCase(node);
    }

    public void caseAIsSentMessageExp(AIsSentMessageExp node)
    {
        defaultCase(node);
    }

    public void caseAMessageArguments(AMessageArguments node)
    {
        defaultCase(node);
    }

    public void caseAMessageArgumentsTail(AMessageArgumentsTail node)
    {
        defaultCase(node);
    }

    public void caseATypeMessageArgument(ATypeMessageArgument node)
    {
        defaultCase(node);
    }

    public void caseAExpMessageArgument(AExpMessageArgument node)
    {
        defaultCase(node);
    }

    public void caseAPathName(APathName node)
    {
        defaultCase(node);
    }

    public void caseAPathNameTail(APathNameTail node)
    {
        defaultCase(node);
    }

    public void caseAIsMarkedPre(AIsMarkedPre node)
    {
        defaultCase(node);
    }

    public void caseAActualParameterList(AActualParameterList node)
    {
        defaultCase(node);
    }

    public void caseAAndLogicalOperator(AAndLogicalOperator node)
    {
        defaultCase(node);
    }

    public void caseAOrLogicalOperator(AOrLogicalOperator node)
    {
        defaultCase(node);
    }

    public void caseAXorLogicalOperator(AXorLogicalOperator node)
    {
        defaultCase(node);
    }

    public void caseAImpliesLogicalOperator(AImpliesLogicalOperator node)
    {
        defaultCase(node);
    }

    public void caseASetCollectionKind(ASetCollectionKind node)
    {
        defaultCase(node);
    }

    public void caseABagCollectionKind(ABagCollectionKind node)
    {
        defaultCase(node);
    }

    public void caseASequenceCollectionKind(ASequenceCollectionKind node)
    {
        defaultCase(node);
    }

    public void caseACollectionCollectionKind(ACollectionCollectionKind node)
    {
        defaultCase(node);
    }

    public void caseAEqualRelationalOperator(AEqualRelationalOperator node)
    {
        defaultCase(node);
    }

    public void caseANotEqualRelationalOperator(ANotEqualRelationalOperator node)
    {
        defaultCase(node);
    }

    public void caseAGtRelationalOperator(AGtRelationalOperator node)
    {
        defaultCase(node);
    }

    public void caseALtRelationalOperator(ALtRelationalOperator node)
    {
        defaultCase(node);
    }

    public void caseAGteqRelationalOperator(AGteqRelationalOperator node)
    {
        defaultCase(node);
    }

    public void caseALteqRelationalOperator(ALteqRelationalOperator node)
    {
        defaultCase(node);
    }

    public void caseAPlusAddOperator(APlusAddOperator node)
    {
        defaultCase(node);
    }

    public void caseAMinusAddOperator(AMinusAddOperator node)
    {
        defaultCase(node);
    }

    public void caseAMultMultiplyOperator(AMultMultiplyOperator node)
    {
        defaultCase(node);
    }

    public void caseADivMultiplyOperator(ADivMultiplyOperator node)
    {
        defaultCase(node);
    }

    public void caseAMinusUnaryOperator(AMinusUnaryOperator node)
    {
        defaultCase(node);
    }

    public void caseANotUnaryOperator(ANotUnaryOperator node)
    {
        defaultCase(node);
    }

    public void caseTSingleLineComment(TSingleLineComment node)
    {
        defaultCase(node);
    }

    public void caseTMultiLineComment(TMultiLineComment node)
    {
        defaultCase(node);
    }

    public void caseTDot(TDot node)
    {
        defaultCase(node);
    }

    public void caseTArrow(TArrow node)
    {
        defaultCase(node);
    }

    public void caseTIsSentOperator(TIsSentOperator node)
    {
        defaultCase(node);
    }

    public void caseTMessageOperator(TMessageOperator node)
    {
        defaultCase(node);
    }

    public void caseTNot(TNot node)
    {
        defaultCase(node);
    }

    public void caseTMult(TMult node)
    {
        defaultCase(node);
    }

    public void caseTDiv(TDiv node)
    {
        defaultCase(node);
    }

    public void caseTPlus(TPlus node)
    {
        defaultCase(node);
    }

    public void caseTMinus(TMinus node)
    {
        defaultCase(node);
    }

    public void caseTPackage(TPackage node)
    {
        defaultCase(node);
    }

    public void caseTEndpackage(TEndpackage node)
    {
        defaultCase(node);
    }

    public void caseTInit(TInit node)
    {
        defaultCase(node);
    }

    public void caseTDerive(TDerive node)
    {
        defaultCase(node);
    }

    public void caseTDef(TDef node)
    {
        defaultCase(node);
    }

    public void caseTAttr(TAttr node)
    {
        defaultCase(node);
    }

    public void caseTOper(TOper node)
    {
        defaultCase(node);
    }

    public void caseTContext(TContext node)
    {
        defaultCase(node);
    }

    public void caseTEnum(TEnum node)
    {
        defaultCase(node);
    }

    public void caseTPre(TPre node)
    {
        defaultCase(node);
    }

    public void caseTPost(TPost node)
    {
        defaultCase(node);
    }

    public void caseTInv(TInv node)
    {
        defaultCase(node);
    }

    public void caseTBody(TBody node)
    {
        defaultCase(node);
    }

    public void caseTEqual(TEqual node)
    {
        defaultCase(node);
    }

    public void caseTNotEqual(TNotEqual node)
    {
        defaultCase(node);
    }

    public void caseTLt(TLt node)
    {
        defaultCase(node);
    }

    public void caseTGt(TGt node)
    {
        defaultCase(node);
    }

    public void caseTLteq(TLteq node)
    {
        defaultCase(node);
    }

    public void caseTGteq(TGteq node)
    {
        defaultCase(node);
    }

    public void caseTAnd(TAnd node)
    {
        defaultCase(node);
    }

    public void caseTOr(TOr node)
    {
        defaultCase(node);
    }

    public void caseTXor(TXor node)
    {
        defaultCase(node);
    }

    public void caseTImplies(TImplies node)
    {
        defaultCase(node);
    }

    public void caseTLParen(TLParen node)
    {
        defaultCase(node);
    }

    public void caseTRParen(TRParen node)
    {
        defaultCase(node);
    }

    public void caseTLBracket(TLBracket node)
    {
        defaultCase(node);
    }

    public void caseTRBracket(TRBracket node)
    {
        defaultCase(node);
    }

    public void caseTLBrace(TLBrace node)
    {
        defaultCase(node);
    }

    public void caseTRBrace(TRBrace node)
    {
        defaultCase(node);
    }

    public void caseTSemicolon(TSemicolon node)
    {
        defaultCase(node);
    }

    public void caseTScopeOperator(TScopeOperator node)
    {
        defaultCase(node);
    }

    public void caseTColon(TColon node)
    {
        defaultCase(node);
    }

    public void caseTComma(TComma node)
    {
        defaultCase(node);
    }

    public void caseTCommercialAt(TCommercialAt node)
    {
        defaultCase(node);
    }

    public void caseTBar(TBar node)
    {
        defaultCase(node);
    }

    public void caseTRange(TRange node)
    {
        defaultCase(node);
    }

    public void caseTApostrophe(TApostrophe node)
    {
        defaultCase(node);
    }

    public void caseTUnknown(TUnknown node)
    {
        defaultCase(node);
    }

    public void caseTLet(TLet node)
    {
        defaultCase(node);
    }

    public void caseTIn(TIn node)
    {
        defaultCase(node);
    }

    public void caseTIf(TIf node)
    {
        defaultCase(node);
    }

    public void caseTThen(TThen node)
    {
        defaultCase(node);
    }

    public void caseTElse(TElse node)
    {
        defaultCase(node);
    }

    public void caseTEndif(TEndif node)
    {
        defaultCase(node);
    }

    public void caseTSet(TSet node)
    {
        defaultCase(node);
    }

    public void caseTBag(TBag node)
    {
        defaultCase(node);
    }

    public void caseTSequence(TSequence node)
    {
        defaultCase(node);
    }

    public void caseTCollection(TCollection node)
    {
        defaultCase(node);
    }

    public void caseTOrderedset(TOrderedset node)
    {
        defaultCase(node);
    }

    public void caseTTuple(TTuple node)
    {
        defaultCase(node);
    }

    public void caseTTupletype(TTupletype node)
    {
        defaultCase(node);
    }

    public void caseTBoolean(TBoolean node)
    {
        defaultCase(node);
    }

    public void caseTName(TName node)
    {
        defaultCase(node);
    }

    public void caseTNewLine(TNewLine node)
    {
        defaultCase(node);
    }

    public void caseTInt(TInt node)
    {
        defaultCase(node);
    }

    public void caseTReal(TReal node)
    {
        defaultCase(node);
    }

    public void caseTBlank(TBlank node)
    {
        defaultCase(node);
    }

    public void caseTTab(TTab node)
    {
        defaultCase(node);
    }

    public void caseTStringLit(TStringLit node)
    {
        defaultCase(node);
    }

    public void caseEOF(EOF node)
    {
        defaultCase(node);
    }

    public void defaultCase(Node node)
    {
    }
}
