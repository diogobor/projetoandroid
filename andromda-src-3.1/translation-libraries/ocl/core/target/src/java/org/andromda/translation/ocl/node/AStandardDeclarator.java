/* This file was generated by SableCC (http://www.sablecc.org/). */

package org.andromda.translation.ocl.node;

import java.util.*;
import org.andromda.translation.ocl.analysis.*;

public final class AStandardDeclarator extends PDeclarator
{
    private PVariableDeclarationList _variableDeclarationList_;
    private TBar _bar_;

    public AStandardDeclarator()
    {
    }

    public AStandardDeclarator(
        PVariableDeclarationList _variableDeclarationList_,
        TBar _bar_)
    {
        setVariableDeclarationList(_variableDeclarationList_);

        setBar(_bar_);

    }
    public Object clone()
    {
        return new AStandardDeclarator(
            (PVariableDeclarationList) cloneNode(_variableDeclarationList_),
            (TBar) cloneNode(_bar_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAStandardDeclarator(this);
    }

    public PVariableDeclarationList getVariableDeclarationList()
    {
        return _variableDeclarationList_;
    }

    public void setVariableDeclarationList(PVariableDeclarationList node)
    {
        if(_variableDeclarationList_ != null)
        {
            _variableDeclarationList_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _variableDeclarationList_ = node;
    }

    public TBar getBar()
    {
        return _bar_;
    }

    public void setBar(TBar node)
    {
        if(_bar_ != null)
        {
            _bar_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _bar_ = node;
    }

    public String toString()
    {
        return ""
            + toString(_variableDeclarationList_)
            + toString(_bar_);
    }

    void removeChild(Node child)
    {
        if(_variableDeclarationList_ == child)
        {
            _variableDeclarationList_ = null;
            return;
        }

        if(_bar_ == child)
        {
            _bar_ = null;
            return;
        }

    }

    void replaceChild(Node oldChild, Node newChild)
    {
        if(_variableDeclarationList_ == oldChild)
        {
            setVariableDeclarationList((PVariableDeclarationList) newChild);
            return;
        }

        if(_bar_ == oldChild)
        {
            setBar((TBar) newChild);
            return;
        }

    }
}
