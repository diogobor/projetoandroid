/* This file was generated by SableCC (http://www.sablecc.org/). */

package org.andromda.translation.ocl.node;

import org.andromda.translation.ocl.analysis.*;

public final class X1PPropertyCallExpressionTail extends XPPropertyCallExpressionTail
{
    private XPPropertyCallExpressionTail _xPPropertyCallExpressionTail_;
    private PPropertyCallExpressionTail _pPropertyCallExpressionTail_;

    public X1PPropertyCallExpressionTail()
    {
    }

    public X1PPropertyCallExpressionTail(
        XPPropertyCallExpressionTail _xPPropertyCallExpressionTail_,
        PPropertyCallExpressionTail _pPropertyCallExpressionTail_)
    {
        setXPPropertyCallExpressionTail(_xPPropertyCallExpressionTail_);
        setPPropertyCallExpressionTail(_pPropertyCallExpressionTail_);
    }

    public Object clone()
    {
        throw new RuntimeException("Unsupported Operation");
    }

    public void apply(Switch sw)
    {
        throw new RuntimeException("Switch not supported.");
    }

    public XPPropertyCallExpressionTail getXPPropertyCallExpressionTail()
    {
        return _xPPropertyCallExpressionTail_;
    }

    public void setXPPropertyCallExpressionTail(XPPropertyCallExpressionTail node)
    {
        if(_xPPropertyCallExpressionTail_ != null)
        {
            _xPPropertyCallExpressionTail_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _xPPropertyCallExpressionTail_ = node;
    }

    public PPropertyCallExpressionTail getPPropertyCallExpressionTail()
    {
        return _pPropertyCallExpressionTail_;
    }

    public void setPPropertyCallExpressionTail(PPropertyCallExpressionTail node)
    {
        if(_pPropertyCallExpressionTail_ != null)
        {
            _pPropertyCallExpressionTail_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _pPropertyCallExpressionTail_ = node;
    }

    void removeChild(Node child)
    {
        if(_xPPropertyCallExpressionTail_ == child)
        {
            _xPPropertyCallExpressionTail_ = null;
        }

        if(_pPropertyCallExpressionTail_ == child)
        {
            _pPropertyCallExpressionTail_ = null;
        }
    }

    void replaceChild(Node oldChild, Node newChild)
    {
    }

    public String toString()
    {
        return "" +
            toString(_xPPropertyCallExpressionTail_) +
            toString(_pPropertyCallExpressionTail_);
    }
}
