#set ($generatedFile = "${entity.packagePath}/${entity.entityName}DAOImpl.java")

// license-header java merge-point
/**
 * Attention: Generated source! Do not modify by hand!
 */
#if ($entity.packageName)
package $entity.packageName;
#end



/**
 * <p>
 * Factory class.
 * Is able to find and create objects of type ${entity.name}.
 * The Hibernate <em>$entity.hibernateInheritanceStrategy</em> inheritance
 * strategy is followed.
 * Those can be described as follows:
 * </p>
 * @see $entity.fullyQualifiedName
 */
#if ($entity.auditoria)
import ${customTypesPackage}.${modelPackageName}.AuditoriaEntity;

import java.util.Date;

import org.hibernate.Session;

#end
import ${customTypesPackage}.${modelPackageName}.DAOException;
import br.ufrj.coppetec.DataObject; 
 
#if ($entity.abstract)
public abstract class ${entity.name}DAOImpl extends ${entity.name}DAO {
#else
public class ${entity.name}DAOImpl extends ${entity.name}DAO {
#end

#foreach ($operation in $entity.businessOperations)
#set ($returnType = $operation.returnType)
#set ($parameterList = $operation.typedArgumentList)

#if(!$operation.findTaggedValue($daoMethod) ||( $operation.findTaggedValue($daoMethod) && $operation.findTaggedValue($daoMethod).equals("true")))

#if ($stringUtils.isBlank($parameterList))
#set ($parameters = "org.hibernate.Session session")
#else
#set ($parameters = "org.hibernate.Session session, ${parameterList}")
#end

## [MOISES-COPPETEC]
## Modificação do tipo de retorno de um método que retorne uma coleção para Object, permitindo assim uma paginação
## transparente para implementador, tirando-o a responsabilidade de retornar um subconjunto de uma consulta    

#if($returnType.collectionType)
	#set($return = "Object")
#else
	#set($return = $returnType.fullyQualifiedName)
#end

## Fim

	
#if ($operation.exceptionsPresent)
    protected $return handle${stringUtils.capitalize(${operation.name})} ($parameters) throws ${customTypesPackage}.${modelPackageName}.DAOException, $operation.exceptionList{
#else
    protected $return handle${stringUtils.capitalize(${operation.name})} ($parameters) throws ${customTypesPackage}.${modelPackageName}.DAOException {
#end
#if ($operation.returnTypePresent)
        return $operation.returnType.javaNullString;    
#end
    }
#end
#end

    protected Object handleFilter(DataObject vo) throws $customTypesPackage.${modelPackageName}.DAOException {		
       return null;
    }
    
    #if(!$entity.abstract)
    protected org.hibernate.Criteria handleXmlExport(br.ufrj.coppetec.ValueObject vo, org.hibernate.Session session) throws $customTypesPackage.${modelPackageName}.DAOException {
	return null;
    }
    #end

}
