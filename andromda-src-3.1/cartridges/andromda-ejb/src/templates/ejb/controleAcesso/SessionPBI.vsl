#parse("templates/ejb/Parameters.vm")
#set ($pbiPackage = "${service.packageName}.${stringUtils.replace($pbiDir, '/', '.')}")
#set ($generatedFile = "$stringUtils.replace($pbiPackage, '.', '/')/${service.name}PBI.java")
#set($webService = $service.hasStereotype("$webSrv"))
#if($service.findTaggedValue("@andromda.services.shared"))
#set ($generatedFile = "../../../../../core/cs/shared/target/src/$stringUtils.replace($pbiPackage, '.', '/')/${service.name}PBI.java")
#end
// .
// license-header java merge-point
//
// Attention: Generated code! Do not modify by hand!
// Generated by: SessionPBI.vsl in andromda-ejb-cartridge-coppetec.
//
package $pbiPackage;

import javax.security.auth.Subject;
import ${service.packageName}.${service.name}BI;
import ${service.packageName}.${service.name}Home;
import java.lang.reflect.Method;

#macro(getParentService $service)
${service.fullyQualifiedName}BI
#end


##public class ${service.name}PBI implements ${service.name}BI
public class ${service.name}PBI #if ($service.generalization)#*implements ${service.generalization.fullyQualifiedName}PBI *# implements #getParentService($service.generalization) { #else { #end

	${service.name}BI $stringUtils.lowerCase($service.name)BI;

	private static Class cls;
    private static Method meth;
    private static Method meth2;
    private static Object[] objargs = null;
    private static Object[] objargs2 = {null,"${service.fullyQualifiedName}",${service.name}Home.class};

	static {
		try {
			cls = Class.forName("br.ufrj.coppetec.ServiceLocator");
		} catch (ClassNotFoundException e) {
			e.printStackTrace();
			// TODO
		}

		Class[] varargs = null;
		Class[] varargs2 = {java.util.Hashtable.class, java.lang.String.class, java.lang.Class.class};
		try {
			meth = cls.getMethod("instance", varargs);
			meth2 = cls.getMethod("getServiceBI", varargs2);
		} catch(NoSuchMethodException e) {
			e.printStackTrace();
			// TODO
		}
	}

	/**
	 * Construtor a ser utilizado em novas aplicações.
	 */
	public ${service.name}PBI() {
		try {
			Object obj = meth.invoke(null, objargs);
			$stringUtils.lowerCase($service.name)BI = (${service.name}BI) meth2.invoke(obj, objargs2);
		} catch (Exception e) {
			e.printStackTrace();
			//TODO 
		}
	}

	/**
	 * Construtor utilizado em aplicações legadas.
	 * Em novas aplicações, utilizar o construtor ${service.name}PBI().
	 */
	@Deprecated
	public ${service.name}PBI(Subject subject) {
		this();
	}

#set($generalizations = $service.allGeneralizations)
##
#set($operations = $service.operations)
##
#foreach($generalization in $generalizations)
	#set($var = $operations.addAll($generalization.operations))
#end
##
#set($cont = 0)	
#set($contParameter = 0)
#foreach ($operation in $operations)
#if($operation.visibility == 'public')
#set($cont = $cont + 1)
##
#set ($listaAtributos = '')
#set ($return = '')
#if($operation.returnType.collectionType || $operation.returnType.listType || $operation.returnType.setType )
#if($webService)
#renderParametersWSPaginacao($operation $listaAtributos true)
#renderReturnWS($operation $return)
#else
#renderParametersPaginacao($operation $listaAtributos true)
#set($return = $operation.returnType.fullyQualifiedName)
#end
#else
#if($webService)
#renderParametersWS($operation $listaAtributos true )
#renderReturnWS($operation $return)
#else
#renderParameters($operation $listaAtributos true)
#set($return = $operation.returnType.fullyQualifiedName)
#end
#end

## Fim
	$operation.visibility  $return ${operation.name} ($listaAtributos) throws Exception #if ($operation.exceptionsPresent), ${operation.exceptionList} #end {
##
#set($securityCode = "")
#set($securityCode = $operation.findTaggedValue("$operationSecurityCode"))
#if($securityCode != "")
		java.util.HashMap mapServicos = accessControl.ServicosSingleton.instance().getServicos();
		boolean possuiPermissao = accessControl.ControleAcesso.verificaPermissao(accessControl.SecurityHolder.getSubject(), mapServicos, new accessControl.Servico("$securityCode"), false);

		if (possuiPermissao) {
			accessControl.PrincipalImpl principalImpl = accessControl.ControleAcessoImpl.getCallerPrincipal(accessControl.SecurityHolder.getSubject());
			principalImpl.setValido(true);        		               	
		} else {
			throw new accessControl.exception.AcessoNegadoException("acesso.negado");
		}

#end
		#if ($operation.returnTypePresent)return#end
#if($operation.returnType.collectionType || $operation.returnType.listType || $operation.returnType.setType )
#if($operation.parameters.size() > 1)
		$stringUtils.lowerCase($service.name)BI.${operation.name}($operation.argumentNames, paginacao);
#else
		$stringUtils.lowerCase($service.name)BI.${operation.name}(paginacao);
#end
#else
		$stringUtils.lowerCase($service.name)BI.${operation.name}($operation.argumentNames);
#end
	}

#if($operation.returnType.collectionType || $operation.returnType.listType || $operation.returnType.setType )
##
#set ($listaAtributos = '')
#set ($return = '')
#if($webService)
#renderParametersWS($operation $listaAtributos true)
#renderReturnWS($operation $return)
#else
#renderParameters($operation $listaAtributos true)
#set($return = $operation.returnType.fullyQualifiedName)
#end
	##$operation.visibility  $return $operation.signature throws Exception #if ($operation.exceptionsPresent), ${operation.exceptionList} #end{
	$operation.visibility  $return ${operation.name} ($listaAtributos) throws Exception #if ($operation.exceptionsPresent), ${operation.exceptionList} #end{
#if($operation.parameters.size() > 1)
		return ${operation.name}($operation.argumentNames, null);
#else
		return ${operation.name}(null);
#end
	}

#end
#end
#end
##
#set($generalizations = $service.allGeneralizations)
##
#set($dependencias = $service.sourceDependencies)
##
#foreach($generalization in $generalizations)
	#set($var = $dependencias.addAll($generalization.sourceDependencies))
#end
## Adicao do metodo do CRUD por dependencia com entidade
#set($cont = 0)
#foreach ($dependencia in $dependencias)
#set($cont = $cont + 1)
#set($contParameter = $contParameter + 1)
##
#if($dependencia.targetElement.FullyQualifiedName.indexOf(".${modelPackageName}.") > 0)
	public java.util.List<${customTypesPackage}.${modelPackageName}.AbstractEntity> manipula${dependencia.targetElement.name}(${dependencia.targetElement.FullyQualifiedName} $stringUtils.lowerCase(${dependencia.targetElement.name}), ${customTypesPackage}.${actionPackageName}.Action action) throws Exception, ${customTypesPackage}.${actionPackageName}.ActionException	{
		java.util.List<${customTypesPackage}.${modelPackageName}.AbstractEntity> manipula = null;

		${dependencia.targetElement.FullyQualifiedName} paramEntity = $stringUtils.lowerCase(${dependencia.targetElement.name});

		//manipula = ${stringUtils.lowerCase($service.name)}BI.manipula${dependencia.targetElement.name}(paramEntity, action);															
		if (action instanceof ${customTypesPackage}.${actionPackageName}.FilterAction)
			manipula = ${stringUtils.lowerCase($service.name)}BI.filter${dependencia.targetElement.name}(paramEntity, (${customTypesPackage}.${actionPackageName}.FilterAction) action);	
		else if (action instanceof ${customTypesPackage}.${actionPackageName}.ListAction)
			manipula = ${stringUtils.lowerCase($service.name)}BI.list${dependencia.targetElement.name}(paramEntity, (${customTypesPackage}.${actionPackageName}.ListAction) action);	
		else if ((action instanceof ${customTypesPackage}.${actionPackageName}.ExportAction))
			manipula = ${stringUtils.lowerCase($service.name)}BI.export${dependencia.targetElement.name}(paramEntity, (${customTypesPackage}.${actionPackageName}.ExportAction) action);	
		else if ((action instanceof ${customTypesPackage}.${actionPackageName}.ImportAction))
			manipula = ${stringUtils.lowerCase($service.name)}BI.import${dependencia.targetElement.name}(paramEntity, (${customTypesPackage}.${actionPackageName}.ImportAction) action);	
		else {
			String nome = action.getClass().getSimpleName();
			nome = org.apache.commons.lang.StringUtils.removeEnd(nome, "Action") + "${dependencia.targetElement.name}";
			java.lang.reflect.Method method = ${service.name}BI.class.getMethod(org.apache.commons.lang.StringUtils.uncapitalize(nome), new Class[]{${dependencia.targetElement.FullyQualifiedName}.class});
			manipula = (java.util.List<${customTypesPackage}.${modelPackageName}.AbstractEntity>)method.invoke(${stringUtils.lowerCase($service.name)}BI, new Object[]{paramEntity});							
		}					

		return manipula;  
	}

#end
#end 
## Fim da adicao
}
