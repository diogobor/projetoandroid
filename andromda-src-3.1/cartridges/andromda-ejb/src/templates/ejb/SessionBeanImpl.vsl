#parse("templates/ejb/SessionEJBGlobals.vm")
// license-header java merge-point
#if ($stringUtils.isNotBlank($service.packageName))
package $service.packageName;
#end

/**
 * @see $service.fullyQualifiedName
 */
public class ${service.name}BeanImpl
    extends ${service.name}Bean
    implements javax.ejb.SessionBean
{


#set($webService = $service.hasStereotype("$webSrv"))

#foreach ($operation in $service.operations)

## [MOISES-COPPETEC]
## Codigo para gerar métodos que receba o grupo a ser carregado na paginação, caso este método retorne uma coleção

#set ($listaArgumentos = '')
#set ($return = '')
#if($webService)
#renderParametersWS($operation $listaArgumentos true)
#renderReturnWS($operation $return)
#else
#renderParameters($operation $listaArgumentos true)
#set($return = $operation.returnType.fullyQualifiedName)
#end

###if ($stringUtils.contains($operation.returnType.fullyQualifiedName, "Collection"))
#if($operation.returnType.collectionType || $operation.returnType.listType || $operation.returnType.setType )
#set ($listaArgumentos = '')
#set ($return = '')
#if($webService)
#renderParametersWSPaginacao($operation $listaArgumentos true)
#renderReturnWS($operation $return)
#else
#renderParametersPaginacao($operation $listaArgumentos true)
#set($return = $operation.returnType.fullyQualifiedName)
#end
#end

## Fim


#if ($operation.exceptionsPresent)
	 $operation.visibility  $return handle${stringUtils.capitalize(${operation.name})} ($listaArgumentos) throws $operation.exceptionList{
#else
	 $operation.visibility  $return handle${stringUtils.capitalize(${operation.name})} ($listaArgumentos){
#end	 
            #if ($operation.returnTypePresent)
                    return $operation.returnType.javaNullString;
            #end	  
	  
	  }
#end

##Adicao do metodo do CRUD por dependencia com entidade
	##foreach ($dependencia in $service.sourceDependencies)

##if($dependencia.targetElement.FullyQualifiedName.indexOf(".${modelPackageName}.") > 0)
##	  public java.util.List<${customTypesPackage}.${modelPackageName}.AbstractEntity> handleManipula${dependencia.targetElement.name}(${dependencia.targetElement.FullyQualifiedName} $stringUtils.lowerCase(${dependencia.targetElement.name}), ${customTypesPackage}.${actionPackageName}.Action action) throws ${customTypesPackage}.${actionPackageName}.ActionException
##	  {
##    try{ 
##	return action.execute($stringUtils.lowerCase(${dependencia.targetElement.name}));   
##    } catch (${customTypesPackage}.${modelPackageName}.DAOException e) {
##			       throw new ${customTypesPackage}.${actionPackageName}.ActionException(e);
##		    }
##	  }

###end
###end 

}
