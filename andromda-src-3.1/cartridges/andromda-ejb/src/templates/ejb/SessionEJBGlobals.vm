#set ($ejbInterface = "javax.ejb.EJBLocalObject")
#set ($ejbHomeInterface = "javax.ejb.EJBLocalHome")
#if ($service.ejbRemoteView)
#set ($ejbInterface = "javax.ejb.EJBObject")
#set ($ejbHomeInterface = "javax.ejb.EJBHome")
#end
#set ($ejbSecurityEnabled = $stringUtils.isNotBlank($securityRealm))


#macro (renderOperationBodyPagination $operation $service)
		 boolean responsibleSession= false;
		 ##set ($securityEnabled = $stringUtils.isNotBlank($securityRealm))
		 ###if($ejbSecurityEnabled)
		 ###set ($listaArgumentos = "")
		 ###set($webService = $service.hasStereotype("$webSrv"))
		 ###if($webService)
		 ###renderParametersWSPaginacao($operation $listaArgumentos false)
		 ###else
		 ###renderParametersPaginacao($operation $listaArgumentos false)
		 ###end			 
		 ##java.util.Collection<${controleAcessoDir}.Restricao> listaRestricaoServico = ${controleAcessoDir}.ControleAcessoUtil.getRestricoesServico("${service.fullyQualifiedName}BI.${operation.name}($listaArgumentos)");
        	 ##${controleAcessoDir}.ControleAcessoUtil.addRestricoes(listaRestricaoServico);	
        	 ###end			 
		 try{		 
		 responsibleSession = ${customTypesPackage}.${modelPackageName}.AbstractDAO.getSession();
		 #set($return = "")
		 #if ($operation.returnTypePresent)
		 	#set($return = "return")
		 #end	
		 #if($stringUtils.isEmpty($operation.argumentNames))
		 	$return handle${stringUtils.capitalize(${operation.name})} (paginacao);
		 #else
		 	$return handle${stringUtils.capitalize(${operation.name})} ($operation.argumentNames, paginacao);
		 #end	 		 
		 } finally {	
		 	###if($ejbSecurityEnabled)
		        ##${controleAcessoDir}.ControleAcessoUtil.removeRestricoes(listaRestricaoServico);
		        ###end		 		
			if(responsibleSession)
				${customTypesPackage}.${modelPackageName}.AbstractDAO.closeSession();
		}
#end

#macro (renderOperationBody $operation $service)
		 boolean responsibleSession= false;
		 ##if($ejbSecurityEnabled)
		 ##set ($listaArgumentos = "")
		 ##set($webService = $service.hasStereotype("$webSrv"))
		 ##if($webService)
		 ##renderParametersWS($operation $listaArgumentos false)
		 ##else
		 ##renderParameters($operation $listaArgumentos false)
		 ##end			 
		 ##java.util.Collection<${controleAcessoDir}.Restricao> listaRestricaoServico = ${controleAcessoDir}.ControleAcessoUtil.getRestricoesServico("${service.fullyQualifiedName}BI.${operation.name}($listaArgumentos)");
        	 ##${controleAcessoDir}.ControleAcessoUtil.addRestricoes(listaRestricaoServico);	
        	 ###end			 
		 try{		 
		 responsibleSession = ${customTypesPackage}.${modelPackageName}.AbstractDAO.getSession();
		 #set($return = "")
		 #if ($operation.returnTypePresent)
		 	#set($return = "return")
		 #end
		 #set($paginacao = "")
		 #if($operation.returnType.collectionType || $operation.returnType.listType || $operation.returnType.setType )	
		 	#set($paginacao = "null")
		 
		 #if($stringUtils.isEmpty($operation.argumentNames))
		 	$return handle${stringUtils.capitalize(${operation.name})} ($paginacao);
		 #else
		 	$return handle${stringUtils.capitalize(${operation.name})} ($operation.argumentNames, $paginacao);
	         #end	
	         #else
	         	$return handle${stringUtils.capitalize(${operation.name})} ($operation.argumentNames);
	         #end	 	
 		 
		 } finally {	
		 	###if($ejbSecurityEnabled)
		        ##${controleAcessoDir}.ControleAcessoUtil.removeRestricoes(listaRestricaoServico);
		        ###end		 		
			if(responsibleSession)
				${customTypesPackage}.${modelPackageName}.AbstractDAO.closeSession();
		}
#end


#macro (renderParametersSecurity $operation)	 
	 #if ($operation.returnTypePresent)
	 #set ($return = '')
	 #set($webService = $operation.owner.hasStereotype("$webSrv"))
	 #if($webService)
	 #renderReturnWS($operation $return)
	 #else
	 #set($return = $operation.returnType.fullyQualifiedName)
	 #end
	 $return  operacao${cont} = $operation.returnType.javaNullString;
	 #end
	 
         #set($paramNames = "")
	 #set($firstParam = true)
	 #foreach ( $att in $operation.parameters )	          	
         	#if($att.name != "" && !$att.return)
         	#set($contParameter = $contParameter + 1)
         #if($webService)
		#set($classe = $att.type.fullyQualifiedName)
		#if(!($stringUtils.indexOf("$classe", "$wsdPackageName") > 0))
		#set($classe = $stringUtils.replace("${classe}", "$modelPackageName", "$wsdPackageName"))
		#if($stringUtils.indexOf("$classe", "$wsdPackageName") > 0)
		#set($classe = "${classe}WS")
		#end
		#end         
         	$classe param${cont}${contParameter} = $att.type.javaNullString;
         #else
         $att.type.fullyQualifiedName param${cont}${contParameter} = $att.type.javaNullString;
         #end
         	#if($firstParam)	 
         		#set($paramNames = $paramNames.concat("param${cont}${contParameter}") )
         		#set($firstParam = false)	
         	#else
         		#set($paramNames = $paramNames.concat(",param${cont}${contParameter}") )	
	 	#end
	 	#end
	 #end	 
	 #set($contParameter = 0)
	 boolean responsibleSession${cont}= false;	 	
#end



#macro (renderSecurityBody $operation)
		#foreach ( $att in $operation.parameters )
		#if($att.name != "" && !$att.return)
		#set($contParameter = $contParameter + 1)		
		param${cont}${contParameter} = ${att.name};
		#end
		#end
		#renderParameters($operation $listaArgumentos false)	
		#set($serviceName = ${stringUtils.strip("#renderServiceName($service $operation)")})
		java.util.HashMap<String,java.util.Collection<accessControl.Restricao>> listaRestricaoServico = ${controleAcessoDir}.ControleAcessoUtil.getRestricoesServico("$serviceName");
        	javax.security.auth.Subject subject = javax.security.auth.Subject.getSubject(java.security.AccessController.getContext());
        	accessControl.PrincipalImpl principalImpl = ${controleAcessoDir}.ControleAcessoImpl.getCallerPrincipal(subject);
        	boolean gerente = false;
        	if(!principalImpl.isValido()){
        		gerente = true;
        		principalImpl.setValido(true);
        	}          	
        	${controleAcessoDir}.ControleAcessoUtil.addRestricoes(principalImpl, listaRestricaoServico);	
		try{
			javax.security.auth.Subject.doAsPrivileged(subject, new java.security.PrivilegedExceptionAction() {
			public Object run() throws Exception{	
				responsibleSession${cont} = $customTypesPackage.${modelPackageName}.AbstractDAO.getSession();
				#if ($operation.returnTypePresent)operacao${cont} = #end
				#set($paginacao = "")
		 		#if($operation.returnType.collectionType || $operation.returnType.listType || $operation.returnType.setType )	
		 		#set($paginacao = "null")
				#if($stringUtils.isEmpty($paramNames))
		 		handle${stringUtils.capitalize(${operation.name})} ($paginacao);
		 		#else
		 		handle${stringUtils.capitalize(${operation.name})} ($paramNames, $paginacao);
	         		#end	
	         		#else
	         		handle${stringUtils.capitalize(${operation.name})} ($paramNames);
	         		#end					 										
				return null;
			}
			}, java.security.AccessController.getContext());  
			#if ($operation.returnTypePresent) 
			return operacao${cont};#end									
		} catch (java.security.PrivilegedActionException e) {		
			${loggerPackage}.${stringUtils.capitalize($loggerName)}Logger.error(e.getMessage(), java.security.PrivilegedActionException.class);
			#if ($operation.returnTypePresent) 
			return operacao${cont};#end			
		} finally {	
			${controleAcessoDir}.ControleAcessoUtil.removeRestricoes(principalImpl,listaRestricaoServico);
			if(gerente)
				principalImpl.setValido(false);			
			if(responsibleSession${cont})
				$customTypesPackage.${modelPackageName}.AbstractDAO.closeSession();
		}					
#end

#macro (renderSecurityBodyPagination $operation)
		#foreach ( $att in $operation.parameters )
		#if($att.name != "" && !$att.return)
		#set($contParameter = $contParameter + 1)		
		param${cont}${contParameter} = ${att.name};
		#end
		#end
		#set($contParameter = 0)
		#set($serviceName = ${stringUtils.strip("#renderServiceNamePagination($service $operation)")})
		paginacao${cont} = paginacao;		
		java.util.HashMap<String,java.util.Collection<accessControl.Restricao>>  listaRestricaoServico = ${controleAcessoDir}.ControleAcessoUtil.getRestricoesServico("$serviceName");
        	javax.security.auth.Subject subject = javax.security.auth.Subject.getSubject(java.security.AccessController.getContext());
        	accessControl.PrincipalImpl principalImpl = ${controleAcessoDir}.ControleAcessoImpl.getCallerPrincipal(subject);
        	boolean gerente = false;
        	if(!principalImpl.isValido()){
        		gerente = true;
        		principalImpl.setValido(true);
        	}        	
        	${controleAcessoDir}.ControleAcessoUtil.addRestricoes(principalImpl, listaRestricaoServico);	
		try{
			javax.security.auth.Subject.doAsPrivileged(subject, new java.security.PrivilegedExceptionAction() {
			public Object run() throws Exception{	
				responsibleSession${cont} = $customTypesPackage.${modelPackageName}.AbstractDAO.getSession();				
				#if ($operation.returnTypePresent)operacao${cont} = #end
		 		#if($stringUtils.isEmpty($paramNames))
		 		handle${stringUtils.capitalize(${operation.name})} (paginacao${cont});
		 		#else
		 		handle${stringUtils.capitalize(${operation.name})} ($paramNames, paginacao${cont});
		 		#end					 										
				return null;
			}
			}, java.security.AccessController.getContext());  
			#if ($operation.returnTypePresent) 
			return operacao${cont};#end									
		} catch (java.security.PrivilegedActionException e) {		
			${loggerPackage}.${stringUtils.capitalize($loggerName)}Logger.error(e.getMessage(), java.security.PrivilegedActionException.class);
			#if ($operation.returnTypePresent) 
			return operacao${cont};#end			
		} finally {	
			${controleAcessoDir}.ControleAcessoUtil.removeRestricoes(principalImpl,listaRestricaoServico);
			if(gerente)
				principalImpl.setValido(false);			
			if(responsibleSession${cont})
				$customTypesPackage.${modelPackageName}.AbstractDAO.closeSession();
		}					
#end

#macro (renderSecurityManipula $actionName $dependencia) 
	java.util.List<${customTypesPackage}.${modelPackageName}.AbstractEntity> ${actionName}${cont}= null;
	${dependencia.targetElement.FullyQualifiedName}Abstract paramEntity${actionName}${cont}${contParameter} = null;
	${customTypesPackage}.${actionPackageName}.${stringUtils.capitalize($actionName)}Action paramAction${actionName}${cont}${contParameter} = null;
	boolean responsibleSession${actionName}${cont}= false;  
	 #if($actionName.equals("filter") || $actionName.equals("list") || $actionName.equals("export") || $actionName.equals("import"))
	 public  java.util.List<${customTypesPackage}.${modelPackageName}.AbstractEntity> ${actionName}${dependencia.targetElement.name}(${dependencia.targetElement.FullyQualifiedName} $stringUtils.lowerCase(${dependencia.targetElement.name}), ${customTypesPackage}.${actionPackageName}.${stringUtils.capitalize($actionName)}Action action) throws ${customTypesPackage}.${actionPackageName}.ActionException{
	 #else
	 public  java.util.List<${customTypesPackage}.${modelPackageName}.AbstractEntity> ${actionName}${dependencia.targetElement.name}(${dependencia.targetElement.FullyQualifiedName} $stringUtils.lowerCase(${dependencia.targetElement.name})) throws ${customTypesPackage}.${actionPackageName}.ActionException{
	 #end
		responsibleSession${actionName}${cont}= false;
		paramEntity${actionName}${cont}${contParameter} = (${dependencia.targetElement.FullyQualifiedName}Abstract)$stringUtils.lowerCase(${dependencia.targetElement.name});
		#if($actionName.equals("filter") || $actionName.equals("list") || $actionName.equals("export") || $actionName.equals("import"))
		paramAction${actionName}${cont}${contParameter} = action;
		#end
		#set($serviceName = ${stringUtils.strip("#renderManipulaName($service $dependencia $actionName)")})
		java.util.HashMap<String,java.util.Collection<accessControl.Restricao>> listaRestricaoServico = ${controleAcessoDir}.ControleAcessoUtil.getRestricoesServico("$serviceName");
        	javax.security.auth.Subject subject = javax.security.auth.Subject.getSubject(java.security.AccessController.getContext());
        	accessControl.PrincipalImpl principalImpl = ${controleAcessoDir}.ControleAcessoImpl.getCallerPrincipal(subject);
        	boolean gerente = false;
        	if(!principalImpl.isValido()){
        		gerente = true;
        		principalImpl.setValido(true);
        	}        	
        	${controleAcessoDir}.ControleAcessoUtil.addRestricoes(principalImpl, listaRestricaoServico);			
    		try{ 
			javax.security.auth.Subject.doAsPrivileged(subject, new java.security.PrivilegedExceptionAction() {
				public Object run() throws Exception{
					#if($actionName.equals("filter"))
					${actionName}${cont} = paramEntity${actionName}${cont}${contParameter}.getDaoImpl().${actionName}(paramAction${actionName}${cont}${contParameter}.getVo(), paramAction${actionName}${cont}${contParameter}.getPaginacao());					
					#elseif($actionName.equals("list") )
					${actionName}${cont} = paramEntity${actionName}${cont}${contParameter}.getDaoImpl().${actionName}(paramAction${actionName}${cont}${contParameter}.getPaginacao(), paramAction${actionName}${cont}${contParameter}.getPropriedade(), paramAction${actionName}${cont}${contParameter}.getDesc());					
					#elseif($actionName.equals("select") )
					${actionName}${cont} = paramEntity${actionName}${cont}${contParameter}.getDaoImpl().${actionName}(paramEntity${actionName}${cont}${contParameter}.getId());					
					#elseif($actionName.equals("export"))
					((${customTypesPackage}.${exportPackageName}.Export)paramAction${actionName}${cont}${contParameter}.getExport()).export(paramEntity${actionName}${cont}${contParameter}.getDaoImpl(), paramAction${actionName}${cont}${contParameter}.getVo());
					#elseif($actionName.equals("import"))
					((${customTypesPackage}.${exportPackageName}.Import)paramAction${actionName}${cont}${contParameter}.getImport()).importa(paramEntity${actionName}${cont}${contParameter}.getDaoImpl(), paramAction${actionName}${cont}${contParameter}.getVo());
					#else
					${actionName}${cont} = paramEntity${actionName}${cont}${contParameter}.getDaoImpl().${actionName}(paramEntity${actionName}${cont}${contParameter});					
					#end
					return null;
				}
			}, java.security.AccessController.getContext());   
			return ${actionName}${cont};  
		} catch (java.security.PrivilegedActionException e) {
			throw new ${customTypesPackage}.${actionPackageName}.ActionException(e);
		} finally {	
			${controleAcessoDir}.ControleAcessoUtil.removeRestricoes(principalImpl,listaRestricaoServico);
			if(gerente)
				principalImpl.setValido(false);				
			if(responsibleSession${actionName}${cont})
				$customTypesPackage.${modelPackageName}.AbstractDAO.closeSession();
		}
	}
#end

#macro (renderServiceName $service $operation)#set($webService=$service.hasStereotype("$webSrv"))#set($listaArgumentos="")#if($webService)#renderParametersWS($operation $listaArgumentos false)#else#renderParameters($operation $listaArgumentos false)#end${service.fullyQualifiedName}BI.${operation.name}($listaArgumentos)#end

#macro (renderServiceNamePagination $service $operation)#set($webService=$service.hasStereotype("$webSrv"))#set($listaArgumentos="")#if($webService)#renderParametersWSPaginacao($operation $listaArgumentos false)#else#renderParametersPaginacao($operation $listaArgumentos false)#end${service.fullyQualifiedName}BI.${operation.name}($listaArgumentos)#end

#macro(renderManipulaName $service $dependencia $actionName)${service.fullyQualifiedName}BI.${actionName}${dependencia.targetElement.name}(${dependencia.targetElement.FullyQualifiedName}#if($actionName.equals("filter")||$actionName.equals("list") ), ${customTypesPackage}.${actionPackageName}.${stringUtils.capitalize(${actionName})}Action#end)#end
