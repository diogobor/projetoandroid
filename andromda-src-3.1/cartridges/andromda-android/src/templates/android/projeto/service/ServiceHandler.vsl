
//
// Attention: Generated code! Do not modify by hand!
// Generated by: ServiceHandler.vsl in andromda-ejb-cartridge-coppetec.
//
#set ($generatedFile = "${service.name}Handler.java")
#if($stringUtils.isNotEmpty($customTypesPackage))
#set ($generatedFile = "${stringUtils.replace($customTypesPackage,'.','/')}/${servicePackageName}/${generatedFile}")
#end

import java.util.Collection;
import java.util.List;
import ${customTypesPackage}.controller.DataBase;
#foreach ($dependencia in $service.sourceDependencies)
import ${customTypesPackage}.${modelPackageName}.${dependencia.targetElement.name}DAO;
import ${customTypesPackage}.${modelPackageName}.${dependencia.targetElement.name}DAOImpl;
import ${customTypesPackage}.vo.${dependencia.targetElement.name}VO;
#end

public abstract class ${service.name}Handler extends DataBase{

	#foreach ($dependencia in $service.sourceDependencies)

	protected ${dependencia.targetElement.name}DAO $stringUtils.lowerCase(${dependencia.targetElement.name})Dao = null;
	
	protected abstract Collection handleFilter(${dependencia.targetElement.name}VO $stringUtils.lowerCase(${dependencia.targetElement.name})VO);
	protected abstract void handleInsert(${dependencia.targetElement.name}VO $stringUtils.lowerCase(${dependencia.targetElement.name})VO);
	protected abstract void handleDelete(${dependencia.targetElement.name}VO $stringUtils.lowerCase(${dependencia.targetElement.name})VO);
	protected abstract void handleUpdate(${dependencia.targetElement.name}VO $stringUtils.lowerCase(${dependencia.targetElement.name})VO);
	
	public ${service.name}Handler(){
		if ($stringUtils.lowerCase(${dependencia.targetElement.name})Dao == null)
			$stringUtils.lowerCase(${dependencia.targetElement.name})Dao = new ${dependencia.targetElement.name}DAOImpl();
	}
	
	public Collection Filter(${dependencia.targetElement.name}VO $stringUtils.lowerCase(${dependencia.targetElement.name})VO){	
		List list${dependencia.targetElement.name} = (List) handleFilter($stringUtils.lowerCase(${dependencia.targetElement.name})VO);
		return list${dependencia.targetElement.name};
	}
	
	public void Insert(${dependencia.targetElement.name}VO $stringUtils.lowerCase(${dependencia.targetElement.name})VO){
		db.beginTransaction();
		try {
			handleInsert($stringUtils.lowerCase(${dependencia.targetElement.name})VO);
			db.setTransactionSuccessful();
		} catch (Exception e) {
			System.out.println("Transaction Error: " + e.toString());
		} finally {
			db.endTransaction();
		}		
	}
	public void Delete(${dependencia.targetElement.name}VO $stringUtils.lowerCase(${dependencia.targetElement.name})VO){
		db.beginTransaction();
		try {
			handleDelete($stringUtils.lowerCase(${dependencia.targetElement.name})VO);
			db.setTransactionSuccessful();
		} catch (Exception e) {
			System.out.println("Transaction Error: " + e.toString());
		} finally {
			db.endTransaction();
		}
	}
	public void Update(${dependencia.targetElement.name}VO $stringUtils.lowerCase(${dependencia.targetElement.name})VO){
		db.beginTransaction();
		try {
			handleUpdate($stringUtils.lowerCase(${dependencia.targetElement.name})VO);
			db.setTransactionSuccessful();
		} catch (Exception e) {
			System.out.println("Transaction Error: " + e.toString());
		} finally {
			db.endTransaction();
		}
	}
	
	#end
	
}