<project default="jar:install"
         xmlns:ant="jelly:ant"
         xmlns:maven="jelly:maven"
         xmlns:j="jelly:core">

	<ant:property environment="env"/>
	
#if($jboss)
	<j:set var="libDirectory" value="${env.JBOSS_HOME}/server/${jboss.config}/lib"/>
#else
	<j:set var="libDirectory" value="${env.CATALINA_HOME}/lib"/>
#end
    <goal name="libaux">

		#set($comparacao1 = "${")
		#set($comparacao2 = "dep.type == 'jar'}")
		#set($comparacao = "$comparacao1$comparacao2")
		#set($dep1 = "${")
		#set($dep2 = "pom.dependencies}")
		#set($dep = "$dep1$dep2")
		<j:forEach var="dep" items="${dep}">
		<j:if test= "${comparacao}">
			#set($comparacao1 = "${")
			#set($comparacao2 = "dep.groupId != ")
			#set($comparacao3 = "pom.groupId}")
			#set($comparacao = "$comparacao1$comparacao2$comparacao3")
			<j:if test= "${comparacao}">
				#set($comparacao1 = "${")
				#set($comparacao2 = "dep.getProperty('jar.manifest.classpath') == ")
				#set($comparacao3 = "'true'}")
				#set($comparacao = "$comparacao1$comparacao2$comparacao3")
			        <j:if test= "$comparacao">	
					<ant:copy todir="${libDirectory}">
						<fileset dir="${user.home}/.maven/repository/${dep.groupId}/jars/">
							<include name="${dep.artifact}"/>
						</fileset>
					</ant:copy>
				</j:if>
			</j:if>	
			
		</j:if>
    		</j:forEach>
    	</goal>
    	
    	
#if (!$jboss)
    <j:set var="deployDirectory" value="${env.CATALINA_HOME}/lib"/>
    <goal name="deploy" prereqs="undeploy">
        <ant:copy file="${user.home}/.maven/repository/${pom.groupId}/jars/${pom.artifactId}-${pom.CurrentVersion}.jar"
                    tofile="${deployDirectory}/${pom.artifactId}-${pom.CurrentVersion}.jar"/>
            
    </goal>

    <goal name="undeploy">
        <ant:delete includeEmptyDirs="true">
            <ant:fileset dir="${deployDirectory}">
                <ant:include name="${pom.artifactId}*.jar"/>
            </ant:fileset>
        </ant:delete>
    </goal>
#else
    <ant:property environment="env"/>

    <j:set var="deployDirectory" value="${env.JBOSS_HOME}/server/${jboss.config}/deploy"/>
    <goal name="deploy" prereqs="undeploy">
        <ant:copy file="${user.home}/.maven/repository/${pom.groupId}/jars/${pom.artifactId}-${pom.CurrentVersion}.jar"
                    tofile="${deployDirectory}/${pom.artifactId}-${pom.CurrentVersion}.jar"/>
        
    </goal>

    <goal name="undeploy">
        <ant:delete includeEmptyDirs="true">
            <ant:fileset dir="${deployDirectory}">
            	<ant:include name="${pom.artifactId}*.jar"/>
            </ant:fileset>
        </ant:delete>
    </goal>

#end
    	
    	
    		

    <preGoal name="jar:jar">

        <ant:path id="schema.classpath">
            <ant:path refid="maven.dependency.classpath"/>
            <ant:path location="${maven.build.dest}"/>
        </ant:path>

        <ant:mkdir dir="${hibernate.schema.output.dir}"/>

        <ant:fileset id="hibernate.mapping.files" dir="${maven.build.dest}">
            <ant:include name="**/*.hbm.xml"/>
        </ant:fileset>

        <ant:pathconvert refid="hibernate.mapping.files" property="hibernate.mappings" pathsep=" "/>

        <ant:java classname="org.hibernate.tool.hbm2ddl.SchemaExport" fork="true">
            <ant:arg value="--output=${hibernate.schema.output.dir}/schema-create.sql"/>
            <ant:arg value="--text"/>
            <ant:arg value="--quiet"/>
            <ant:arg value="--delimiter=;"/>
            <ant:arg value="--format"/>
            <ant:arg line="${hibernate.mappings}"/>
            <ant:jvmarg value="-Dhibernate.dialect=${hibernate.db.dialect}"/>
            <ant:classpath refid="schema.classpath" />
        </ant:java>

        <ant:replaceregexp file="${hibernate.schema.output.dir}/schema-create.sql"
                       match="^(alter table .* drop constraint|drop table)"
                       replace="-- SKIP \1"
                       flags="i"
                       byline="true"/>

        <ant:java classname="org.hibernate.tool.hbm2ddl.SchemaExport" fork="true">
            <ant:arg value="--output=${hibernate.schema.output.dir}/schema-drop.sql"/>
            <ant:arg value="--text"/>
            <ant:arg value="--quiet"/>
            <ant:arg value="--delimiter=;"/>
            <ant:arg value="--format"/>
            <ant:arg value="--drop"/>
            <ant:arg line="${hibernate.mappings}"/>
            <ant:jvmarg value="-Dhibernate.dialect=${hibernate.db.dialect}"/>
            <ant:classpath refid="schema.classpath" />
        </ant:java>

    </preGoal>
    
	<j:set var="libDirectory" value="${env.JBOSS_HOME}/server/${jboss.config}/lib"/>
    	<goal name="libaux">

		#set($comparacao1 = "${")
		#set($comparacao2 = "dep.type == 'jar'}")
		#set($comparacao = "$comparacao1$comparacao2")
		#set($dep1 = "${")
	    #set($dep2 = "pom.dependencies}")				
	    #set($dep = "$dep1$dep2")
		<j:forEach var="dep" items="${dep}">
		<j:if test= "${comparacao}">
			#set($comparacao1 = "${")
			#set($comparacao2 = "dep.groupId != ")
			#set($comparacao3 = "pom.groupId}")
			#set($comparacao = "$comparacao1$comparacao2$comparacao3")
			<j:if test= "${comparacao}">
				#set($comparacao1 = "${")
				#set($comparacao2 = "dep.getProperty('jar.manifest.classpath') == ")
				#set($comparacao3 = "'true'}")
				#set($comparacao = "$comparacao1$comparacao2$comparacao3")
			        <j:if test= "$comparacao">	
					<ant:copy todir="${libDirectory}">
						<fileset dir="${user.home}/.maven/repository/${dep.groupId}/jars/">
							<include name="${dep.artifact}"/>
						</fileset>
					</ant:copy>
				</j:if>
			</j:if>	
			
		</j:if>
    		</j:forEach>
    	</goal>
#set($open = "${")
    #set($end = "}")
    <goal name="earInstall">
        <j:set var="earDirectory" value="${open}basedir${end}/../../target/ear"/>	    
#set($comparacao1 = "${")
#set($comparacao2 = "dep.type == 'jar'}")
#set($comparacao = "$comparacao1$comparacao2")
#set($dep1 = "${")
#set($dep2 = "pom.dependencies}")				
#set($dep = "$dep1$dep2")
        <j:if test="${packDependencies}">
        <j:forEach var="dep" items="${dep}">
            <j:if test= "${comparacao}">
#set($comparacao1 = "${")
#set($comparacao2 = "dep.groupId != ")
#set($comparacao3 = "pom.groupId}")
#set($comparacao = "$comparacao1$comparacao2$comparacao3")
                <j:if test= "${comparacao}">
#set($comparacao1 = "${")
#set($comparacao2 = "dep.getProperty('jar.manifest.classpath') == ")
#set($comparacao3 = "'true'}")
#set($comparacao = "$comparacao1$comparacao2$comparacao3")
                    <j:if test= "$comparacao">	
                        <ant:copy todir="${earDirectory}">
                            <fileset dir="${maven.repo.local}/${dep.groupId}/jars/">
                                <include name="${dep.artifact}"/>
                                <exclude name="*commons-logging*"/>
                                <exclude name="*-shared*"/>
                            </fileset>
                        </ant:copy>
                    </j:if>
                </j:if>	
            </j:if>
        </j:forEach>
        </j:if>

        <ant:copy 
            file="${maven.repo.local}/${pom.groupId}/jars/${pom.artifactId}-${pom.CurrentVersion}.jar"
            tofile="${earDirectory}/${pom.artifactId}-${pom.CurrentVersion}.jar"/>
    </goal>

    <!-- ==================================================================
           Cleans Everything and deletes all implementation classes
         ================================================================== -->
    <goal name="nuke">
        <ant:delete>
            <fileset dir="src/java">
                <include name="**/*Impl.java"/>
            </fileset>
        </ant:delete>
        <attainGoal name="clean"/>
    </goal>

</project>
