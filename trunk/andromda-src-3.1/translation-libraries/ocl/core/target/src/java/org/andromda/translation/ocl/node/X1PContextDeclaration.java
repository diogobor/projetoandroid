/* This file was generated by SableCC (http://www.sablecc.org/). */

package org.andromda.translation.ocl.node;

import org.andromda.translation.ocl.analysis.*;

public final class X1PContextDeclaration extends XPContextDeclaration
{
    private XPContextDeclaration _xPContextDeclaration_;
    private PContextDeclaration _pContextDeclaration_;

    public X1PContextDeclaration()
    {
    }

    public X1PContextDeclaration(
        XPContextDeclaration _xPContextDeclaration_,
        PContextDeclaration _pContextDeclaration_)
    {
        setXPContextDeclaration(_xPContextDeclaration_);
        setPContextDeclaration(_pContextDeclaration_);
    }

    public Object clone()
    {
        throw new RuntimeException("Unsupported Operation");
    }

    public void apply(Switch sw)
    {
        throw new RuntimeException("Switch not supported.");
    }

    public XPContextDeclaration getXPContextDeclaration()
    {
        return _xPContextDeclaration_;
    }

    public void setXPContextDeclaration(XPContextDeclaration node)
    {
        if(_xPContextDeclaration_ != null)
        {
            _xPContextDeclaration_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _xPContextDeclaration_ = node;
    }

    public PContextDeclaration getPContextDeclaration()
    {
        return _pContextDeclaration_;
    }

    public void setPContextDeclaration(PContextDeclaration node)
    {
        if(_pContextDeclaration_ != null)
        {
            _pContextDeclaration_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _pContextDeclaration_ = node;
    }

    void removeChild(Node child)
    {
        if(_xPContextDeclaration_ == child)
        {
            _xPContextDeclaration_ = null;
        }

        if(_pContextDeclaration_ == child)
        {
            _pContextDeclaration_ = null;
        }
    }

    void replaceChild(Node oldChild, Node newChild)
    {
    }

    public String toString()
    {
        return "" +
            toString(_xPContextDeclaration_) +
            toString(_pContextDeclaration_);
    }
}
