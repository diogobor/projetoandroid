/* This file was generated by SableCC (http://www.sablecc.org/). */

package org.andromda.translation.ocl.node;

import java.util.*;
import org.andromda.translation.ocl.analysis.*;

public final class APackageDeclaration extends PDeclaration
{
    private TPackage _package_;
    private TName _name_;
    private final LinkedList _pathNameTail_ = new TypedLinkedList(new PathNameTail_Cast());
    private final LinkedList _contextDeclaration_ = new TypedLinkedList(new ContextDeclaration_Cast());
    private TEndpackage _endpackage_;

    public APackageDeclaration()
    {
    }

    public APackageDeclaration(
        TPackage _package_,
        TName _name_,
        List _pathNameTail_,
        List _contextDeclaration_,
        TEndpackage _endpackage_)
    {
        setPackage(_package_);

        setName(_name_);

        {
            this._pathNameTail_.clear();
            this._pathNameTail_.addAll(_pathNameTail_);
        }

        {
            this._contextDeclaration_.clear();
            this._contextDeclaration_.addAll(_contextDeclaration_);
        }

        setEndpackage(_endpackage_);

    }

    public APackageDeclaration(
        TPackage _package_,
        TName _name_,
        XPPathNameTail _pathNameTail_,
        XPContextDeclaration _contextDeclaration_,
        TEndpackage _endpackage_)
    {
        setPackage(_package_);

        setName(_name_);

        if(_pathNameTail_ != null)
        {
            while(_pathNameTail_ instanceof X1PPathNameTail)
            {
                this._pathNameTail_.addFirst(((X1PPathNameTail) _pathNameTail_).getPPathNameTail());
                _pathNameTail_ = ((X1PPathNameTail) _pathNameTail_).getXPPathNameTail();
            }
            this._pathNameTail_.addFirst(((X2PPathNameTail) _pathNameTail_).getPPathNameTail());
        }

        if(_contextDeclaration_ != null)
        {
            while(_contextDeclaration_ instanceof X1PContextDeclaration)
            {
                this._contextDeclaration_.addFirst(((X1PContextDeclaration) _contextDeclaration_).getPContextDeclaration());
                _contextDeclaration_ = ((X1PContextDeclaration) _contextDeclaration_).getXPContextDeclaration();
            }
            this._contextDeclaration_.addFirst(((X2PContextDeclaration) _contextDeclaration_).getPContextDeclaration());
        }

        setEndpackage(_endpackage_);

    }
    public Object clone()
    {
        return new APackageDeclaration(
            (TPackage) cloneNode(_package_),
            (TName) cloneNode(_name_),
            cloneList(_pathNameTail_),
            cloneList(_contextDeclaration_),
            (TEndpackage) cloneNode(_endpackage_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAPackageDeclaration(this);
    }

    public TPackage getPackage()
    {
        return _package_;
    }

    public void setPackage(TPackage node)
    {
        if(_package_ != null)
        {
            _package_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _package_ = node;
    }

    public TName getName()
    {
        return _name_;
    }

    public void setName(TName node)
    {
        if(_name_ != null)
        {
            _name_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _name_ = node;
    }

    public LinkedList getPathNameTail()
    {
        return _pathNameTail_;
    }

    public void setPathNameTail(List list)
    {
        _pathNameTail_.clear();
        _pathNameTail_.addAll(list);
    }

    public LinkedList getContextDeclaration()
    {
        return _contextDeclaration_;
    }

    public void setContextDeclaration(List list)
    {
        _contextDeclaration_.clear();
        _contextDeclaration_.addAll(list);
    }

    public TEndpackage getEndpackage()
    {
        return _endpackage_;
    }

    public void setEndpackage(TEndpackage node)
    {
        if(_endpackage_ != null)
        {
            _endpackage_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _endpackage_ = node;
    }

    public String toString()
    {
        return ""
            + toString(_package_)
            + toString(_name_)
            + toString(_pathNameTail_)
            + toString(_contextDeclaration_)
            + toString(_endpackage_);
    }

    void removeChild(Node child)
    {
        if(_package_ == child)
        {
            _package_ = null;
            return;
        }

        if(_name_ == child)
        {
            _name_ = null;
            return;
        }

        if(_pathNameTail_.remove(child))
        {
            return;
        }

        if(_contextDeclaration_.remove(child))
        {
            return;
        }

        if(_endpackage_ == child)
        {
            _endpackage_ = null;
            return;
        }

    }

    void replaceChild(Node oldChild, Node newChild)
    {
        if(_package_ == oldChild)
        {
            setPackage((TPackage) newChild);
            return;
        }

        if(_name_ == oldChild)
        {
            setName((TName) newChild);
            return;
        }

        for(ListIterator i = _pathNameTail_.listIterator(); i.hasNext();)
        {
            if(i.next() == oldChild)
            {
                if(newChild != null)
                {
                    i.set(newChild);
                    oldChild.parent(null);
                    return;
                }

                i.remove();
                oldChild.parent(null);
                return;
            }
        }

        for(ListIterator i = _contextDeclaration_.listIterator(); i.hasNext();)
        {
            if(i.next() == oldChild)
            {
                if(newChild != null)
                {
                    i.set(newChild);
                    oldChild.parent(null);
                    return;
                }

                i.remove();
                oldChild.parent(null);
                return;
            }
        }

        if(_endpackage_ == oldChild)
        {
            setEndpackage((TEndpackage) newChild);
            return;
        }

    }

    private class PathNameTail_Cast implements Cast
    {
        public Object cast(Object o)
        {
            PPathNameTail node = (PPathNameTail) o;

            if((node.parent() != null) &&
                (node.parent() != APackageDeclaration.this))
            {
                node.parent().removeChild(node);
            }

            if((node.parent() == null) ||
                (node.parent() != APackageDeclaration.this))
            {
                node.parent(APackageDeclaration.this);
            }

            return node;
        }
    }

    private class ContextDeclaration_Cast implements Cast
    {
        public Object cast(Object o)
        {
            PContextDeclaration node = (PContextDeclaration) o;

            if((node.parent() != null) &&
                (node.parent() != APackageDeclaration.this))
            {
                node.parent().removeChild(node);
            }

            if((node.parent() == null) ||
                (node.parent() != APackageDeclaration.this))
            {
                node.parent(APackageDeclaration.this);
            }

            return node;
        }
    }
}
