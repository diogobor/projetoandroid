/* This file was generated by SableCC (http://www.sablecc.org/). */

package org.andromda.translation.ocl.node;

import java.util.*;
import org.andromda.translation.ocl.analysis.*;

public final class AIsMarkedPre extends PIsMarkedPre
{
    private TCommercialAt _commercialAt_;
    private TPre _pre_;

    public AIsMarkedPre()
    {
    }

    public AIsMarkedPre(
        TCommercialAt _commercialAt_,
        TPre _pre_)
    {
        setCommercialAt(_commercialAt_);

        setPre(_pre_);

    }
    public Object clone()
    {
        return new AIsMarkedPre(
            (TCommercialAt) cloneNode(_commercialAt_),
            (TPre) cloneNode(_pre_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAIsMarkedPre(this);
    }

    public TCommercialAt getCommercialAt()
    {
        return _commercialAt_;
    }

    public void setCommercialAt(TCommercialAt node)
    {
        if(_commercialAt_ != null)
        {
            _commercialAt_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _commercialAt_ = node;
    }

    public TPre getPre()
    {
        return _pre_;
    }

    public void setPre(TPre node)
    {
        if(_pre_ != null)
        {
            _pre_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _pre_ = node;
    }

    public String toString()
    {
        return ""
            + toString(_commercialAt_)
            + toString(_pre_);
    }

    void removeChild(Node child)
    {
        if(_commercialAt_ == child)
        {
            _commercialAt_ = null;
            return;
        }

        if(_pre_ == child)
        {
            _pre_ = null;
            return;
        }

    }

    void replaceChild(Node oldChild, Node newChild)
    {
        if(_commercialAt_ == oldChild)
        {
            setCommercialAt((TCommercialAt) newChild);
            return;
        }

        if(_pre_ == oldChild)
        {
            setPre((TPre) newChild);
            return;
        }

    }
}
