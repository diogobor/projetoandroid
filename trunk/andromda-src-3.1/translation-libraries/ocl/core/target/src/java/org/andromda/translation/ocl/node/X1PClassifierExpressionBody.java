/* This file was generated by SableCC (http://www.sablecc.org/). */

package org.andromda.translation.ocl.node;

import org.andromda.translation.ocl.analysis.*;

public final class X1PClassifierExpressionBody extends XPClassifierExpressionBody
{
    private XPClassifierExpressionBody _xPClassifierExpressionBody_;
    private PClassifierExpressionBody _pClassifierExpressionBody_;

    public X1PClassifierExpressionBody()
    {
    }

    public X1PClassifierExpressionBody(
        XPClassifierExpressionBody _xPClassifierExpressionBody_,
        PClassifierExpressionBody _pClassifierExpressionBody_)
    {
        setXPClassifierExpressionBody(_xPClassifierExpressionBody_);
        setPClassifierExpressionBody(_pClassifierExpressionBody_);
    }

    public Object clone()
    {
        throw new RuntimeException("Unsupported Operation");
    }

    public void apply(Switch sw)
    {
        throw new RuntimeException("Switch not supported.");
    }

    public XPClassifierExpressionBody getXPClassifierExpressionBody()
    {
        return _xPClassifierExpressionBody_;
    }

    public void setXPClassifierExpressionBody(XPClassifierExpressionBody node)
    {
        if(_xPClassifierExpressionBody_ != null)
        {
            _xPClassifierExpressionBody_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _xPClassifierExpressionBody_ = node;
    }

    public PClassifierExpressionBody getPClassifierExpressionBody()
    {
        return _pClassifierExpressionBody_;
    }

    public void setPClassifierExpressionBody(PClassifierExpressionBody node)
    {
        if(_pClassifierExpressionBody_ != null)
        {
            _pClassifierExpressionBody_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _pClassifierExpressionBody_ = node;
    }

    void removeChild(Node child)
    {
        if(_xPClassifierExpressionBody_ == child)
        {
            _xPClassifierExpressionBody_ = null;
        }

        if(_pClassifierExpressionBody_ == child)
        {
            _pClassifierExpressionBody_ = null;
        }
    }

    void replaceChild(Node oldChild, Node newChild)
    {
    }

    public String toString()
    {
        return "" +
            toString(_xPClassifierExpressionBody_) +
            toString(_pClassifierExpressionBody_);
    }
}
