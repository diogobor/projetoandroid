/* This file was generated by SableCC (http://www.sablecc.org/). */

package org.andromda.translation.ocl.node;

import java.util.*;
import org.andromda.translation.ocl.analysis.*;

public final class ANotEqualRelationalOperator extends PRelationalOperator
{
    private TNotEqual _notEqual_;

    public ANotEqualRelationalOperator()
    {
    }

    public ANotEqualRelationalOperator(
        TNotEqual _notEqual_)
    {
        setNotEqual(_notEqual_);

    }
    public Object clone()
    {
        return new ANotEqualRelationalOperator(
            (TNotEqual) cloneNode(_notEqual_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseANotEqualRelationalOperator(this);
    }

    public TNotEqual getNotEqual()
    {
        return _notEqual_;
    }

    public void setNotEqual(TNotEqual node)
    {
        if(_notEqual_ != null)
        {
            _notEqual_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _notEqual_ = node;
    }

    public String toString()
    {
        return ""
            + toString(_notEqual_);
    }

    void removeChild(Node child)
    {
        if(_notEqual_ == child)
        {
            _notEqual_ = null;
            return;
        }

    }

    void replaceChild(Node oldChild, Node newChild)
    {
        if(_notEqual_ == oldChild)
        {
            setNotEqual((TNotEqual) newChild);
            return;
        }

    }
}
