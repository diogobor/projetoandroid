#set ($generatedFile = "$stringUtils.replace($servletPackage, '.', '/')/ActionServletImpl.java")
package $servletPackage;

import java.util.HashMap;
import javax.servlet.ServletException;
import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import ${controleAcessoDir}.ControleAcessoImpl;
import ${controleAcessoDir}.ServicosSingleton;
import ${controleAcessoDir}.ControleAcesso;
import ${controleAcessoDir}.Perfil;
import ${utilDir}.Constantes;
import java.util.Collection;
/**
 * This servlet is designed to avoid Struts copying zeroes into those form
 * fields that take numerical values.
 */
public final class ActionServletImpl extends ActionServlet
{
	/**
	 * Log da Classe.
	 */
	private static Log s_log = LogFactory.getLog(ActionServletImpl.class);
    /**
     * Call the parent initializer and configure the converter not to convert
     * <code>null</code> numbers to the corresponding zero value.
     */
    public void init( javax.servlet.ServletConfig config ) throws javax.servlet.ServletException
    {
        super.init( config );
        try
        {
            ControleAcessoImpl controleAcesso = new ControleAcessoImpl();
            HashMap<String, ControleAcesso> controles = ServicosSingleton.instance().getControles();
            if(controles == null){
            	controles = new HashMap<String, ControleAcesso>();
            }
            controles.put("$securityRealm", controleAcesso);
            ServicosSingleton.instance().setControles(controles);                	
            #if(!$demanda.equals('true'))	                       
            HashMap listaServicosProjeto = controleAcesso.listaServicos();            
            HashMap<String, HashMap<String, java.util.Collection<Perfil>>> listaServicos = ServicosSingleton.instance().getServicos();
            if(listaServicos == null){
            	listaServicos = new HashMap<String, HashMap<String, java.util.Collection<Perfil>>>();
            }
            listaServicos.put("$securityRealm", listaServicosProjeto);            
            ServicosSingleton.instance().setServicos(listaServicos);            
            #end
            
            HashMap<String, Boolean> demanda = ServicosSingleton.instance().getDemanda();
            if(demanda == null){
            	demanda = new HashMap<String, Boolean>();
            }
            demanda.put("$securityRealm", $demanda);  
            ServicosSingleton.instance().setDemanda(demanda);            
	    #if($tarefasAgendadas)
            Boolean tarefasAgendadas = (Boolean)this.getServletContext().getContext("/").getAttribute("tarefasAgendadas");
            if ((tarefasAgendadas == null) || (tarefasAgendadas == Boolean.FALSE))
              controleAcesso.agendaTarefas();            
            this.getServletContext().getContext("/").setAttribute("tarefasAgendadas", Boolean.TRUE);
            #end
            
           

            
            
          
            
        }
        catch( Exception e )
        {
        	s_log.error("Nao foi possivel listar os servicos", new ServletException());
        }
    }
}

