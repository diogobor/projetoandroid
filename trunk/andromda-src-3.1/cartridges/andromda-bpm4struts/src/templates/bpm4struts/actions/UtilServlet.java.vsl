#set ($generatedFile = "$stringUtils.replace($servletPackage, '.', '/')/UtilServlet.java")
#set ($securityEnabled = $stringUtils.isNotBlank($securityRealm))
package $servletPackage;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import ${customTypesPackage}.ServiceLocator;


public class UtilServlet extends javax.servlet.http.HttpServlet
{
	public void doGet(
        final javax.servlet.http.HttpServletRequest request,
        final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException
    {

        doPost(request, response);
    }

    public void doPost(
        final javax.servlet.http.HttpServletRequest request,
        final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException{
        
        response.setContentType("text/html; charset=$pageEncoding");
        request.setCharacterEncoding("$pageEncoding");
        
        
        if(request.getRequestURL().toString().contains("clearSecondCache")){
        	clearSecondCache(request, response);
        }

#if ($securityEnabled)
		if(request.getRequestURL().toString().contains("reloadAccessControl")){
        	reloadAccessControl(request, response);
        }
#end

        response.sendRedirect("${contextoPrincipal}");
        
    }

	private void clearSecondCache(HttpServletRequest request, HttpServletResponse response) {
/*
		try {
			ServiceLocator.instance().getUtilServiceHandlerBI().clearSecondCache();
		} catch (Exception e) {
			e.printStackTrace();
		}
*/
	}

#if ($securityEnabled)
	private void reloadAccessControl(HttpServletRequest request, HttpServletResponse response) {
		try {
			ServiceLocator.instance().getUtilServiceHandlerBI().reloadAccessControl();
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
#end
}