#set ($ejbInterface = "javax.ejb.EJBLocalObject")
#set ($ejbHomeInterface = "javax.ejb.EJBLocalHome")
#if ($service.ejbRemoteView)
#set ($ejbInterface = "javax.ejb.EJBObject")
#set ($ejbHomeInterface = "javax.ejb.EJBHome")
#end
#set ($ejbSecurityEnabled = $stringUtils.isNotBlank($securityRealm))


#macro (renderOperationBodyPagination $operation $service)
		boolean responsibleSession = false;

		try {
			responsibleSession = ${customTypesPackage}.${modelPackageName}.AbstractDAO.getSession();

			#if ($operation.returnTypePresent)return #end
			#if($stringUtils.isEmpty($operation.argumentNames))
			handle${stringUtils.capitalize(${operation.name})} (paginacao);
			#else
			handle${stringUtils.capitalize(${operation.name})} ($operation.argumentNames, paginacao);
			#end
		} finally {
			if(responsibleSession)
				${customTypesPackage}.${modelPackageName}.AbstractDAO.closeSession();
		}
#end

#macro (renderOperationBody $operation $service)
		boolean responsibleSession= false;

		try {
			responsibleSession = ${customTypesPackage}.${modelPackageName}.AbstractDAO.getSession();

			#if ($operation.returnTypePresent)return #end
			#set($paginacao = "")
			#if($operation.returnType.collectionType || $operation.returnType.listType || $operation.returnType.setType )	
			#set($paginacao = "null")
			#if($stringUtils.isEmpty($operation.argumentNames))
			handle${stringUtils.capitalize(${operation.name})} ($paginacao);
			#else
			handle${stringUtils.capitalize(${operation.name})} ($operation.argumentNames, $paginacao);
			#end
			#else
			handle${stringUtils.capitalize(${operation.name})} ($operation.argumentNames);
			#end
		} finally {
			if(responsibleSession)
				${customTypesPackage}.${modelPackageName}.AbstractDAO.closeSession();
		}
#end

#macro (renderSecurityBody $operation)
		##renderParameters($operation $listaArgumentos false)
		#set($serviceName = ${stringUtils.strip("#renderServiceName($service $operation)")})
		java.util.HashMap<String,java.util.Collection<accessControl.Restricao>> listaRestricaoServico = ${controleAcessoDir}.ControleAcessoUtil.getRestricoesServico("$serviceName");
		javax.security.auth.Subject subject = accessControl.SecurityHolder.getSubject();
		accessControl.PrincipalImpl principalImpl = ${controleAcessoDir}.ControleAcessoImpl.getCallerPrincipal(subject);

		boolean gerente = false;
		if (!principalImpl.isValido()) {
			gerente = true;
			principalImpl.setValido(true);
		}

		${controleAcessoDir}.ControleAcessoUtil.addRestricoes(principalImpl, listaRestricaoServico);

		boolean responsibleSession = false;

		try {
			responsibleSession = $customTypesPackage.${modelPackageName}.AbstractDAO.getSession();
			#if ($operation.returnTypePresent)return #end
			#set($paginacao = "")
			#if($operation.returnType.collectionType || $operation.returnType.listType || $operation.returnType.setType )	
			#set($paginacao = "null")
			#if($stringUtils.isEmpty($operation.argumentNames))
			handle${stringUtils.capitalize(${operation.name})} ($paginacao);
			#else
			handle${stringUtils.capitalize(${operation.name})} ($operation.argumentNames, $paginacao);
			#end
			#else
			handle${stringUtils.capitalize(${operation.name})} ($operation.argumentNames);
			#end
		} finally {
			${controleAcessoDir}.ControleAcessoUtil.removeRestricoes(principalImpl, listaRestricaoServico);
			if(gerente)
				principalImpl.setValido(false);
			if(responsibleSession)
				$customTypesPackage.${modelPackageName}.AbstractDAO.closeSession();
		}
#end

#macro (renderSecurityBodyPagination $operation)
		#set($serviceName = ${stringUtils.strip("#renderServiceNamePagination($service $operation)")})
		java.util.HashMap<String,java.util.Collection<accessControl.Restricao>> listaRestricaoServico = ${controleAcessoDir}.ControleAcessoUtil.getRestricoesServico("$serviceName");
		javax.security.auth.Subject subject = accessControl.SecurityHolder.getSubject();
		accessControl.PrincipalImpl principalImpl = ${controleAcessoDir}.ControleAcessoImpl.getCallerPrincipal(subject);

		boolean gerente = false;
		if (!principalImpl.isValido()) {
			gerente = true;
			principalImpl.setValido(true);
		}

		${controleAcessoDir}.ControleAcessoUtil.addRestricoes(principalImpl, listaRestricaoServico);

		boolean responsibleSession = false;

		try {
			responsibleSession = $customTypesPackage.${modelPackageName}.AbstractDAO.getSession();
			#if ($operation.returnTypePresent)return #end
			#if($stringUtils.isEmpty($operation.argumentNames))
			handle${stringUtils.capitalize(${operation.name})} (paginacao);
			#else
			handle${stringUtils.capitalize(${operation.name})} ($operation.argumentNames, paginacao);
			#end
		} finally {
			${controleAcessoDir}.ControleAcessoUtil.removeRestricoes(principalImpl, listaRestricaoServico);
			if (gerente)
				principalImpl.setValido(false);
			if (responsibleSession)
				$customTypesPackage.${modelPackageName}.AbstractDAO.closeSession();
		}
#end

#macro (renderSecurityManipula $actionName $dependencia)
	#if($actionName.equals("filter") || $actionName.equals("list") || $actionName.equals("export") || $actionName.equals("import"))
	public java.util.List<${customTypesPackage}.${modelPackageName}.AbstractEntity> ${actionName}${dependencia.targetElement.name}(${dependencia.targetElement.FullyQualifiedName} $stringUtils.lowerCase(${dependencia.targetElement.name}), ${customTypesPackage}.${actionPackageName}.${stringUtils.capitalize($actionName)}Action action) throws ${customTypesPackage}.${actionPackageName}.ActionException {
		${customTypesPackage}.${actionPackageName}.${stringUtils.capitalize($actionName)}Action paramAction = action;
	#else
	public java.util.List<${customTypesPackage}.${modelPackageName}.AbstractEntity> ${actionName}${dependencia.targetElement.name}(${dependencia.targetElement.FullyQualifiedName} $stringUtils.lowerCase(${dependencia.targetElement.name})) throws ${customTypesPackage}.${actionPackageName}.ActionException {
		${customTypesPackage}.${actionPackageName}.${stringUtils.capitalize($actionName)}Action paramAction = null;
	#end
		${dependencia.targetElement.FullyQualifiedName}Abstract paramEntity = (${dependencia.targetElement.FullyQualifiedName}Abstract)$stringUtils.lowerCase(${dependencia.targetElement.name});
		java.util.List<${customTypesPackage}.${modelPackageName}.AbstractEntity> ${actionName}Return = null;

		#set($serviceName = ${stringUtils.strip("#renderManipulaName($service $dependencia $actionName)")})
		java.util.HashMap<String,java.util.Collection<accessControl.Restricao>> listaRestricaoServico = ${controleAcessoDir}.ControleAcessoUtil.getRestricoesServico("$serviceName");
		javax.security.auth.Subject subject = accessControl.SecurityHolder.getSubject();
		accessControl.PrincipalImpl principalImpl = ${controleAcessoDir}.ControleAcessoImpl.getCallerPrincipal(subject);

		boolean gerente = false;
		if (!principalImpl.isValido()) {
			gerente = true;
			principalImpl.setValido(true);
		}

		${controleAcessoDir}.ControleAcessoUtil.addRestricoes(principalImpl, listaRestricaoServico);

		try{
			#if($actionName.equals("filter"))
			${actionName}Return = paramEntity.getDaoImpl().${actionName}(paramAction.getVo(), paramAction.getPaginacao());
			#elseif($actionName.equals("list"))
			${actionName}Return = paramEntity.getDaoImpl().${actionName}(paramAction.getPaginacao(), paramAction.getPropriedade(), paramAction.getDesc());
			#elseif($actionName.equals("select"))
			${actionName}Return = paramEntity.getDaoImpl().${actionName}(paramEntity.getId());
			#elseif($actionName.equals("export"))
			((${customTypesPackage}.${exportPackageName}.Export)paramAction.getExport()).export(paramEntity.getDaoImpl(), paramAction.getVo());
			#elseif($actionName.equals("import"))
			((${customTypesPackage}.${exportPackageName}.Import)paramAction.getImport()).importa(paramEntity.getDaoImpl(), paramAction.getVo());
			#else
			${actionName}Return = paramEntity.getDaoImpl().${actionName}(paramEntity);
			#end

			return ${actionName}Return;
		} catch (Exception e) {
			throw new ${customTypesPackage}.${actionPackageName}.ActionException(e);
		} finally {
			${controleAcessoDir}.ControleAcessoUtil.removeRestricoes(principalImpl,listaRestricaoServico);
			if(gerente)
				principalImpl.setValido(false);
		}
	}

#end

#macro (renderServiceName $service $operation)#set($webService=$service.hasStereotype("$webSrv"))#set($listaArgumentos="")#if($webService)#renderParametersWS($operation $listaArgumentos false)#else#renderParameters($operation $listaArgumentos false)#end${service.fullyQualifiedName}BI.${operation.name}($listaArgumentos)#end

#macro (renderServiceNamePagination $service $operation)#set($webService=$service.hasStereotype("$webSrv"))#set($listaArgumentos="")#if($webService)#renderParametersWSPaginacao($operation $listaArgumentos false)#else#renderParametersPaginacao($operation $listaArgumentos false)#end${service.fullyQualifiedName}BI.${operation.name}($listaArgumentos)#end

#macro(renderManipulaName $service $dependencia $actionName)${service.fullyQualifiedName}BI.${actionName}${dependencia.targetElement.name}(${dependencia.targetElement.FullyQualifiedName}#if($actionName.equals("filter")||$actionName.equals("list") ), ${customTypesPackage}.${actionPackageName}.${stringUtils.capitalize(${actionName})}Action#end)#end
