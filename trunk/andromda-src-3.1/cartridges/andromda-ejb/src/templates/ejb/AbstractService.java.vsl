#parse("templates/ejb/SessionEJBGlobals.vm")
// license-header java merge-point
//
// Attention: Generated code! Do not modify by hand!
// Generated by: abstractService.java.vsl in andromda-ejb-cartridge-coppetec.
//
#if ($stringUtils.isNotBlank($service.packageName))
package $service.packageName;
#end



/**
$service.getDocumentation(" * ")
 */

public abstract class ${service.name}

#if ($service.generalization)
    extends ${service.generalization.fullyQualifiedName}Impl
#end
{



    // ---------------- business methods  ----------------------
    
    
#set($webService = $service.hasStereotype("$webSrv"))

#if($ejbSecurityEnabled)
#set($cont = 0)	
#set($contParameter = 0)
#end
#foreach ($operation in $service.operations)
#if($ejbSecurityEnabled)
#set($contParameter = 0)
#set($cont = $cont + 1)
#end


	## Only expose public methods
	   /**
	$operation.getDocumentation("    * ")
	    */
	    

#set ($listaArgumentos = '')
#set ($return = '')
#if($webService)
#renderParametersWS($operation $listaArgumentos true)
#renderReturnWS($operation $return)
#else
#renderParameters($operation $listaArgumentos true)
#set($return = $operation.returnType.fullyQualifiedName)
#end


#set($exception = "")	    
#if ($operation.exceptionsPresent)
	#set($exception = "throws $operation.exceptionList")
#end

	  #if(!$operation.returnType.collectionType && !$operation.returnType.listType && !$operation.returnType.setType )
	  $operation.visibility  abstract $return handle${stringUtils.capitalize(${operation.name})} ($listaArgumentos) $exception;
	  #end
	 #if($ejbSecurityEnabled)
	 #renderParametersSecurity($operation)
	 #end	  
	   /**
		$operation.getDocumentation("    * ")
	    */	  
	  $operation.visibility  $return ${operation.name} ($listaArgumentos) $exception{
		#if($ejbSecurityEnabled)
		#renderSecurityBody($operation)												
		#else		
		#renderOperationBody($operation $service)
		#end
	  }
	  	  
	  
	  



## [MOISES-COPPETEC]
## Codigo para gerar métodos que receba o grupo a ser carregado na paginação, caso este método retorne uma coleção

###if ($stringUtils.contains($operation.returnType.fullyQualifiedName, "Collection"))
#if($operation.returnType.collectionType || $operation.returnType.listType || $operation.returnType.setType )
#set($contParameter = 0)
#set ($listaArgumentos = '')
#set ($return = '')
#if($webService)
#renderParametersWSPaginacao($operation $listaArgumentos true)
#renderReturnWS($operation $return)
#else
#renderParametersPaginacao($operation $listaArgumentos true)
#set($return = $operation.returnType.fullyQualifiedName)
#end

	## Only expose public methods
	   /**
	$operation.getDocumentation("    * ")
	    */


#set($exception = "")
#if ($operation.exceptionsPresent)
	#set($exception = "throws $operation.exceptionList")
#end
	  $operation.visibility  abstract $return handle${stringUtils.capitalize(${operation.name})} ($listaArgumentos) $exception;
	   
	 #if($ejbSecurityEnabled)	
	 Integer paginacao${cont} = null;
	 #end	   /**
		$operation.getDocumentation("    * ")
	    */	  
	  $operation.visibility  $return ${operation.name} ($listaArgumentos) $exception{
		#if($ejbSecurityEnabled)
		#renderSecurityBodyPagination($operation)												
		#else	
		#renderOperationBodyPagination($operation $service)
		#end
	  }
#end
#end

	##renderGetSession()	

}