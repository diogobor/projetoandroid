<?xml version="1.0" encoding="ISO-8859-1" ?>

<profile>
    <documentation>
        <p>
            Dependencies can be used between Services and Entities, they
            won't need any stereotype assigned to them. These dependencies
            are used to reference an entity from another entity or service,
            or to reference a service from an entity or another service.
        </p>
        <p>
            Entity query operations (i.e. finders) can be denoted by setting the
            query flag on the modeled operation to true
            (they do not require any stereotypes).
        </p>
        <p>
            Actors represent roles within your model. To designate that a role
            has access to a given service you must draw a dependency from an Actor
            to the
            <a href="Service"><![CDATA[<<Service>>]]></a>. To designate the
            role has access to to a given operation, you must draw a dependency from
            an Actor to the operation.
        </p>
        <p>
            <strong>Transitive persistence</strong>in Hibernate is controlled by cascading Hibernate operations.
            There are four points to adjust that:
            <ul>
                <li>the
                    <a href="namespace.html#hibernateDefaultCascade">hibernateDefaultCascade</a>namespace property:
                    the overall default for cascade
                </li>
                <li>the
                    <a href="namespace.html#hibernateCompositionCascade">hibernateCompositionCascade</a>namespace
                    property:
                    how an UML composition should be interpreted as cascade
                </li>
                <li>the
                    <a href="namespace.html#hibernateAggregationCascade">hibernateAggregationCascade</a>namespace
                    property:
                    how an UML aggregation should be interpreted as cascade
                </li>
                <li>the
                    <a href="profile.html#@andromda_hibernate_cascade">@andromda.hibernate.cascade tagged value</a>
                    at the individual association end
                </li>
            </ul>
            The idea is to visualize the cascading hierarchie by using UML composition and aggregation. The inverse
            direction is marked with cascade="none" to get a clear direction.
        </p>
    </documentation>
    <elements>
        <elementGroup name="Stereotypes">
            <element name="ENTITY">
                <documentation>
                    Denotes a class is representing an Hibernate POJO. This will instruct the cartridge to generate
                    an <code>.hbm.xml</code> descriptor and the corresponding class from it.
                </documentation>
                <value>Entity</value>
                <appliedOnElement>class</appliedOnElement>
            </element>
            
            <element name="SERVICE">
                <documentation>
                    Denotes a class is representing an EJB session bean that is supposed to be used as a facade
                    for a set of entities.
                </documentation>
                <value>Service</value>
                <appliedOnElement>class</appliedOnElement>
            </element>
            <element name="FRONT_END_USE_CASE">
                <documentation>
                    A use-case that participates in the front-end (or presentation-tier) processes.
                </documentation>
                <value>FrontEndUseCase</value>
                <appliedOnElement>use-case</appliedOnElement>
            </element>
            <element name="FRONT_END_APPLICATION">
                <documentation>
                    The use-case flagged with this stereotype will be the application's starting point,
                    you can only use this stereotype in combination with the <![CDATA[<<FrontEndUseCase>>]]> stereotype.
                </documentation>
                <value>FrontEndApplication</value>
                <appliedOnElement>use-case</appliedOnElement>
            </element>
        </elementGroup>
    </elements>
</profile>