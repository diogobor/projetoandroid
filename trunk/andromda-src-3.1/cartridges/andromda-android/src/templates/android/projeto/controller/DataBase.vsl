#set ($generatedFile = "DataBase.java")
#if($stringUtils.isNotEmpty($customTypesPackage))
#set ($generatedFile = "${stringUtils.replace($customTypesPackage,'.','/')}/${controllerPackageName}/${generatedFile}")
#end
package ${customTypesPackage}.${controllerPackageName};

/*
 Attention: Generated code! Do not modify by hand!
 Generated by: DataBase.vsl in andromda-android-cartridge.
*/
import br.ufrj.dcc.api.controller.ConnectionDataBase;
import br.ufrj.dcc.api.controller.ContextDataBase;
import br.ufrj.dcc.api.view.PageFacade;
import br.ufrj.dcc.impl.controller.ConnectionDataBaseImpl;
import br.ufrj.dcc.impl.controller.ContextDataBaseImpl;
import br.ufrj.dcc.impl.controller.PersistenceValuesImpl;
import br.ufrj.dcc.impl.view.PageFacadeImpl;

public class DataBase{
        
        private static final String SCHEMA_DATABASE = "${schemaDataBase}";
		private static final int DATABASE_VERSION = ${dataBaseVersion};
        private ConnectionDataBase connection;
        private ContextDataBase context;
        protected static PersistenceValues db;
        
        public DataBase (){
                
                if (context == null){
                        try {
                                context = new ContextDataBaseImpl(SCHEMA_DATABASE, DATABASE_VERSION);    
                        } catch (Exception e) {
                                PageFacade page = new PageFacadeImpl();
                                page.showErrorMessage("Erro ao criar o Banco!");
                        }
                }
                if (connection == null){
                        try {
                                connection = new ConnectionDataBaseImpl(((ContextDataBaseImpl)context));
                        } catch (Exception e) {
                                PageFacade page = new PageFacadeImpl();
                                page.showErrorMessage("Erro ao conectar ao Banco!");
                        }
                }
                if (db == null){
                        db = new PersistenceValuesImpl(connection);
                }
        }
        
        public void executeSQL(String sql){
                if (connection == null){
                        try {
                                connection = new ConnectionDataBaseImpl(((ContextDataBaseImpl)context));
                        } catch (Exception e) {
                                PageFacade page = new PageFacadeImpl();
                                page.showErrorMessage("Erro ao conectar ao Banco!");
                        }
                }
                
                context.insertSQL(connection,sql);
                
                if (connection == null){
                        try {
                                connection = new ConnectionDataBaseImpl(((ContextDataBaseImpl)context));
                        } catch (Exception e) {
                                PageFacade page = new PageFacadeImpl();
                                page.showErrorMessage("Erro ao conectar ao Banco!");
                        }
                }
                db = new PersistenceValuesImpl(connection);
        }
}
