#set ($generatedFile = "${controller.packagePath}/${controller.name}.java")
##package $controller.packageName;

import java.util.ArrayList;
import java.util.Collection;
import java.util.List;

import ${customTypesPackage}.R;
import ${controller.packageName}.form.${controller.name}Form;
#foreach ($cTransition in $controller.controllerTransitions)
import ${cTransition.fullyQualifiedName};
import ${cTransition.fullyQualifiedName}Impl;
#end
import br.ufrj.dcc.api.view.ActionCommander;
import br.ufrj.dcc.api.view.Button;
import br.ufrj.dcc.api.view.PageFacade;
import br.ufrj.dcc.impl.view.PageFacadeImpl;
import br.ufrj.dcc.impl.view.SessionImpl;

public abstract class ${controller.name} {
	${controller.name}Form form = new ${controller.name}Form();
	#foreach($signal in $controller.useCase.signalList)
	#if($stringUtils.isNotBlank($signal.name))
	#if(!$stringUtils.isNotBlank($signal.transition.findTaggedValue("@andromda.presentation.web.action.type")) || !$signal.transition.findTaggedValue("@andromda.presentation.web.action.type").equals("form"))
	protected ActionCommander btn${signal.name} = new ActionCommander(){
		public void action() {
			 
			PageFacade page = new PageFacadeImpl();
			
			#foreach($parameter in $signal.parameters)
			form.set$stringUtils.capitalize(${parameter.name})(page.getInputText(String.valueOf(R.id.${parameter.name})).getValue());
			#end
			#if($stringUtils.isNotBlank($signal.nomeAcao))
			${signal.nomeAcao}(form);
			#end
			
			page.changePage(String.valueOf(
					R.layout.${signal.nextPageName}));
			
			#if($signal.temColecaoResultado)
			preencher$stringUtils.capitalize(${signal.ColecaoResultado.name})(form.get$stringUtils.capitalize(${signal.ColecaoResultado.name})());
			#end
		}
	};
	#end
	#end
	#end
	public void iniciar(){
		preInit();
		PageFacade page = new PageFacadeImpl();
		
		page.changePage(String.valueOf(
				R.layout.${controller.useCase.firstPage.name}));
		#foreach($signal in $controller.uc.signal)
		page.getButton(String.valueOf(R.id.${signal.name})).setAction(btn${signal.name});
		#end
		posInit();
	}
	protected void preInit(){
	}
	protected void posInit(){
	}
	#foreach($signal in $controller.useCase.signalList)
	#if($signal.temColecaoResultado)
	#if($stringUtils.isNotBlank(${signal.trigger.name}))
	public void preencher$stringUtils.capitalize(${signal.ColecaoResultado.name})(form){
		try {
				preencherGrid$stringUtils.capitalize(${signal.ColecaoResultado.name})(form.get$stringUtils.capitalize(${signal.ColecaoResultado.name})());
			} catch (Exception e) {
				PageFacade page = new PageFacadeImpl();
				page.showErrorMessage("Um erro foi encontrado na aplicação");
			}
		}
	}
	#end
	#elseif($signal.colecao)
	public void preencherGrid$stringUtils.capitalize(${signal.colecao.name})(Collection ${signal.colecao.name}){
		PageFacade page = new PageFacadeImpl();
		List<Button[]> botoes = new ArrayList<Button[]>();
		for(final Object obj : ${signal.colecao.name}){
		Button[] arrayBotoes = new Button[${signal.sinaisColecao.size()}];
		#set($count=0)
		#foreach($bot in ${signal.sinaisColecao})
		Button button$count = page.createButton("$bot.name");
		arrayBotoes[$count] = button$count;
		button${count}.setAction(new ActionCommander(){
				public void action() {
					SessionImpl.instance().put(PageFacade.TABLE_ACTION_KEY, obj );
					$bot.trigger.targetUseCase.controller.name controle = new ${bot.trigger.targetUseCase.controller.name}Impl();
					controle.iniciar();
				}
			});
		#set($count=$count+1)	
		#end
			botoes.add(arrayBotoes);
		}
		page.createTable( ${signal.colecao.name}, botoes);
	}
	#end
	#end
	#foreach($operation in $controller.operations)
	public abstract ${operation.returnType.fullyQualifiedName} ${operation.name}(${controller.name}Form form);
	
	#end
	
}
